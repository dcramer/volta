var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","ProgressRead","exit_code","with_context","voltaerror","backtrace","Attempts to downcast this error to a particular…","option","Returns the process exit code that should be returned if…","exitcode","try_from","try_into","borrow_mut","type_id","formatter","VoltaError","ExitCode","VoltaFail","ResultExt","compressed_size","archive","A Node installation tarball.","uncompressed_size","response","Provides types and functions for fetching and unpacking a…","origin","archive::tarball","to_string","borrow","typeid","as_fail","HttpError","Tarball","MissingHeaderError","UnexpectedContentLengthError","to_owned","clone_into","volta_core","string","volta_core::error","volta_core::error::ErrorDetails","command","package","from_url","matching","version","CreatePostscriptErrorPath","Directory","ErrorDetails","BinaryAlreadyInstalled","Thrown when package tries to install a binary that is…","bin_name","existing_package","new_package","BinaryExecError","volta_core::error::details","Thrown when executing an external binary fails","BinaryNotFound","Thrown when a binary could not be found in the local…","volta_core::error::details::ErrorDetails","BuildPathError","Thrown when building the virtual environment path fails","BypassError","Thrown when unable to launch a command with VOLTA_BYPASS set","CannotPinPackage","Thrown when a user tries to `volta pin` something other…","CompletionsOutFileError","Thrown when the Completions out-dir is not a directory","ContainingDirError","Thrown when the containing directory could not be determined","CouldNotDetermineTool","CreateDirError","CreatePostscriptError","Thrown when unable to create the postscript file","CreateTempDirError","Thrown when creating a temporary directory fails","in_dir","CreateTempFileError","Thrown when creating a temporary file fails","CurrentDirError","DeleteDirectoryError","Thrown when deleting a directory fails","directory","DeleteFileError","Thrown when deleting a file fails","DeprecatedCommandError","DetermineBinaryLoaderError","Thrown when determining the loader for a binary…","DownloadToolNetworkError","ExecutablePathError","Thrown when building the path to an executable fails","ExecutablePermissionsError","Thrown when verifying the file permissions on an…","ExecuteHookError","Thrown when unable to execute a hook command","HookCommandFailed","Thrown when a hook command returns a non-zero exit code","HookMultipleFieldsSpecified","Thrown when a hook contains multiple fields (prefix,…","HookNoFieldsSpecified","Thrown when a hook doesn't contain any of the known fields…","HookPathError","Thrown when determining the path to a hook fails","InvalidHookCommand","InvalidHookOutput","Thrown when output from a hook command could not be read","InvalidInvocation","Thrown when a user does e.g. `volta install node 12`…","InvalidToolName","Thrown when a tool name is invalid per npm's rules.","NoBinPlatform","Thrown when BinConfig (read from file) does not contain…","NodeVersionNotFound","Thrown when there is no Node version matching a requested…","NoGlobalInstalls","NoHomeEnvironmentVar","NoInstallDir","Thrown when the install dir could not be determined","NoLocalDataDir","NoPackageExecutables","Thrown when a user tries to install or fetch a package…","NoPinnedNodeVersion","Thrown when a user tries to pin a Yarn version before…","NoPlatform","Thrown when the platform (Node version) could not be…","NoProjectYarn","Thrown when Yarn is not set in a project","NotInPackage","Thrown when the user tries to pin Node or Yarn versions…","NoUserYarn","Thrown when default Yarn is not set","NoVersionsFound","NpmViewMetadataFetchError","Thrown when there is an error running `npm view`","NpmViewMetadataParseError","Thrown when there is an parsing the metadata from `npm view`","NpmPackFetchError","Thrown when there is an error running `npm pack`","NpmPackUnpackError","Thrown when there is issue finding, loading, or unpacking…","NpxNotAvailable","PackageInstallFailed","Thrown when package install command is not successful.","PackageMetadataFetchError","Thrown when there is an error fetching package metadata","PackageNotFound","Thrown when a specified package could not be found on the…","PackageParseError","Thrown when parsing a package manifest fails","PackageReadError","Thrown when reading a package manifest fails","PackageUnpackError","Thrown when a package has been unpacked but is not formed…","PackageVersionNotFound","Thrown when there is no package version matching a…","PackageWriteError","Thrown when writing a package manifest fails","ParseBinConfigError","Thrown when unable to parse a bin config file","ParseHooksError","Thrown when unable to parse a hooks.json file","ParseNodeIndexCacheError","Thrown when unable to parse the node index cache","ParseNodeIndexError","Thrown when unable to parse the node index","ParseNodeIndexExpiryError","Thrown when unable to parse the node index cache expiration","ParseNpmManifestError","Thrown when unable to parse the npm manifest file from a…","ParsePackageConfigError","Thrown when unable to parse a package configuration","ParsePackageMetadataError","Thrown when unable to parse the metadata for a package","ParsePlatformError","Thrown when unable to parse the platform.json file","ParseToolSpecError","Thrown when unable to parse a tool spec…","tool_spec","PersistInventoryError","Thrown when persisting an archive to the inventory fails","ProjectLocalBinaryExecError","Thrown when executing a project-local binary fails","ProjectLocalBinaryNotFound","Thrown when a project-local binary could not be found","PublishHookBothUrlAndBin","Thrown when a publish hook contains both the url and bin…","PublishHookNeitherUrlNorBin","Thrown when a publish hook contains neither url nor bin…","ReadBinConfigDirError","Thrown when there was an error reading the user bin…","ReadBinConfigError","Thrown when there was an error reading the config for a…","ReadDefaultNpmError","Thrown when unable to read the default npm version file","ReadHooksError","Thrown when there was an error opening a hooks.json file","ReadInventoryDirError","Thrown when there was an error reading the inventory…","ReadNodeIndexCacheError","Thrown when there was an error reading the Node Index Cache","ReadNodeIndexExpiryError","Thrown when there was an error reading the Node Index…","ReadNpmManifestError","Thrown when there was an error reading the npm manifest file","ReadPackageConfigError","Thrown when there was an error reading a package…","ReadPlatformError","Thrown when there was an error opening the user platform…","RegistryFetchError","Thrown when the public registry for Node or Yarn could not…","SetupToolImageError","Thrown when there was an error copying an unpacked tool to…","ShimCreateError","Thrown when Volta is unable to create a shim","ShimExecutableNotFound","Thrown when Volta cannot find the shim executable","ShimRemoveBuiltInError","Thrown when trying to remove a built-in shim (`node`,…","ShimRemoveError","Thrown when Volta is unable to remove a shim","StringifyBinConfigError","Thrown when serializnig a bin config to JSON fails","StringifyPackageConfigError","Thrown when serializnig a package config to JSON fails","StringifyPlatformError","Thrown when serializing the platform to JSON fails","StringifyToolchainError","Thrown when serializing the toolchain to JSON fails","Unimplemented","Thrown when a given feature has not yet been implemented","UnpackArchiveError","Thrown when unpacking an archive (tarball or zip) fails","UnrecognizedShell","Thrown when the shell name specified in the Volta…","UnspecifiedPostscript","Thrown when the postscript file was not specified in the…","UnspecifiedShell","Thrown when the shell name was not specified in the Volta…","VersionParseError","WriteBinConfigError","Thrown when there was an error writing a bin config file","WriteDefaultNpmError","Thrown when there was an error writing the default npm to…","WriteNodeIndexCacheError","Thrown when there was an error writing the node index cache","WriteNodeIndexExpiryError","Thrown when there was an error writing the node index…","WritePackageConfigError","Thrown when there was an error writing a package config","WritePackageShasumError","Thrown when there was an error writing the shasum for a…","WritePlatformError","Thrown when writing the platform.json file fails","YarnLatestFetchError","Thrown when there is an error fetching the latest version…","YarnVersionNotFound","Thrown when there is no Yarn version matching a requested…","report_error","Report an error, both to the console and to error logs","volta_core::event","volta_core::event::EventKind","activitykind","namedtempfile","fallible","distrohook","metadatahook","hookconfig","toolhooks","volta_core::hook","__private_field","volta_core::hook::tool","base_path","REL_PATH_PARENT","eventhooks","Creates a merged struct, with \"right\" having precedence…","inventory","volta_core::inventory","voltahome","voltainstall","pathbuf","env_paths","VOLTA_HOME","volta_core::layout","VOLTA_INSTALL","setloggererror","logverbosity","logcontext","dependencies","dev_dependencies","manifest","volta_core::manifest","platform","platformspec","The pinned version of Node.","The pinned version of Yarn, if any.","sourcedimage","volta_core::platform","osstring","Produces a modified version of the current `PATH`…","for_current_dir","project","nodeversion","exitstatus","toolcommand","binconfig","session","volta_core::run","commandarg","errordetails","toolchain","lazyhookconfig","publish","sourcedplatformspec","add_event_start","add_event_end","add_event_tool_end","add_event_error","Deactivate","volta_core::shell","postscript_path","postscript","shimresult","progressbar","The package version","NodeVersion","A full Node version including not just the version of Node…","The version of Node itself.","The npm version globally installed with the Node distro.","The Tool implementation for fetching and installing Node","Manifest","load_default_npm_version","Load the local npm version file to determine the default…","_IMPL_DESERIALIZE_FOR_Manifest","volta_core::tool::node","rawnodeindex","volta_core::tool","The Tool implementation for fetching and installing Npm…","PackageDetails","Details required for fetching a 3rd-party Package","tarball_url","The Tool implementation for fetching and installing…","bin_full_path","load_cached_distro","fetch_remote_distro","packagedetails","unpack_archive","volta_core::tool::package","PackageConfig","Configuration information about an installed package.","The package name","The platform used to install this package","The binaries installed by this package","BinConfig","Configuration information about an installed binary from a…","The binary name","The package that installed this binary","The relative path of the binary in the installed package","The platform used to install this binary","The loader information for the script, if any","BinLoader","Information about the Shebang script loader (e.g.…","The command used to run a script","Any additional arguments specified for the loader","versionspec","resolve","resolve_latest","resolve_semver","versionreq","packageindex","rawpackagemetadata","description","versions","dist_tags","from_file","into_json","volta_core::tool::package::serial","from_json","fetch_internal","TOOL_SPEC_PATTERN","HAS_VERSION","The Tool implementation for fetching and installing Yarn","Return the archive if it is valid. It may have been…","determine_remote_url","Determine the remote URL to download from, using the hooks…","Fetch the distro archive from the internet","volta_core::tool::yarn","archive_basename","archive_filename","NODE_DISTRO_ARCH","The system architecture component of a Node distro's name.","NODE_DISTRO_EXTENSION","Filename extension for Node distro files.","NODE_DISTRO_OS","The OS component of a Node distro's filename.","uninstall","Fetch a Tool into the local inventory","Install a tool, making it the default so it is available…","Pin a tool in the local project so that it is usable…","volta_core::toolchain","reqparseerror","volta_core::version","deserialize","serialize","parse_requirements","volta_core::hook::serial","volta_core::inventory::node","volta_core::inventory::package","volta_core::inventory::yarn","volta_core::log","volta_core::manifest::serial","volta_core::monitor","volta_core::platform::sourced","volta_core::project","volta_core::run::binary","volta_core::session","equivalent","volta_core::shell::bash","volta_core::shell::fish","volta_core::shim","volta_core::tool::node::fetch","volta_core::tool::node::resolve","volta_core::tool::node::serial","volta_core::tool::package::resolve","volta_core::tool::serial","volta_core::tool::yarn::resolve","volta_core::tool::yarn::serial","volta_core::toolchain::serial","volta_core::version::version_serde","compile_postscript","install","binloader","rawbinloader","packageconfig","npmviewdata","assert_receiver_is_total_eq","ordering","createpostscripterrorpath","partial_cmp","rawpackageconfig","rawbinconfig","doublecheckedcell","hashmap","expecting","visit_str","initialize","EventKind","LazyHookConfig","HookConfig","ToolHooks","EventHooks","RawResolveHook","RawPublishHook","RawHookConfig","RawEventHooks","RawToolHooks","REL_PATH","DistroHook","MetadataHook","LazyInventory","Inventory","NodeCollection","PackageCollection","YarnCollection","LogContext","LogVerbosity","BinManifest","RawBinManifest","ToolchainSpec","BinVisitor","PlatformSpec","SourcedPlatformSpec","SourcedImage","LazyProject","ToolCommand","CommandArg","DefaultBinary","ActivityKind","CurrentShell","Postscript","ShimResult","NodeIndex","NodeEntry","NodeDistroFiles","RawNodeIndex","RawNodeEntry","PackageIndex","RawPackageMetadata","RawPackageVersionInfo","RawPackageDistTags","RawDistInfo","NpmViewData","RawPackageConfig","RawBinConfig","RawBinLoader","YarnIndex","RawYarnIndex","RawYarnEntry","RawYarnAsset","LazyToolchain","Toolchain","VersionSpec","VersionVisitor","volta::command","augment_clap","is_subcommand","volta::command::list","volta::command::list::Package","The version of Node the package is installed against.","The names of the tools associated with the package.","volta::command::list::toolchain","volta::command::list::toolchain::Toolchain","subcommand","Subcommand","Uninstall","Completions","volta::command::activate","volta::command::completions","volta::command::current","volta::command::deactivate","volta::command::fetch","volta::command::install","volta::command::pin","volta::command::uninstall","volta::command::use","volta::command::which","volta::cli","packagemanager","from_clap","argmatches","Activate","PackageManager","PackageManagerKind","packages","Default","Package","from_str"];
searchIndex["archive"]={"doc":"This crate provides types for fetching and unpacking…","i":[[3,R[31],R[20],E,N,N],[12,"code",E,E,0,N],[3,R[32],E,R[21],N,N],[12,R[19],E,E,1,N],[12,R[22],E,E,1,N],[12,"data",E,E,1,N],[12,R[25],E,E,1,N],[3,"Zip",E,E,N,N],[12,R[19],E,E,2,N],[12,"data",E,E,2,N],[12,R[25],E,E,2,N],[4,"Origin",E,"Metadata describing whether an archive comes from a local…",N,N],[13,"Local",E,E,3,N],[13,"Remote",E,E,3,N],[5,"load_native",E,"Load an archive in the native OS-preferred format from the…",N,[[["file"]],[["error"],["box",[R[20]]],[R[0],["box","error"]]]]],[5,"fetch_native",E,"Fetch a remote archive in the native OS-preferred format…",N,[[["str"],["path"]],[["error"],["box",[R[20]]],[R[0],["box","error"]]]]],[0,"tarball",E,R[24],N,N],[3,R[32],R[26],R[21],N,N],[12,R[19],E,E,1,N],[12,R[22],E,E,1,N],[12,"data",E,E,1,N],[12,R[25],E,E,1,N],[3,R[33],E,E,N,N],[12,"header",E,E,4,N],[3,R[34],E,E,N,N],[12,"length",E,E,5,N],[5,"content_length",E,"Determines the length of an HTTP response's content in…",N,[[[R[23]]],[[R[0],["u64","error"]],["u64"],["error"]]]],[5,"unpack_isize",E,"Unpacks the `isize` field from a gzip payload as a 64-bit…",N,[[],["u64"]]],[5,"fetch_isize",E,"Fetches just the `isize` field (the field that indicates…",N,[[["str"],["u64"]],[[R[0],["error"]],["error"]]]],[5,"load_isize",E,"Loads the `isize` field (the field that indicates the…",N,[[["file"]],[[R[0],["error"]],["error"]]]],[5,"accepts_byte_ranges",E,E,N,[[[R[23]]],["bool"]]],[5,"fetch_uncompressed_size",E,"Determines the uncompressed size of a gzip file hosted at…",N,[[["str"],["u64"]],[[R[7],["u64"]],["u64"]]]],[5,"load_uncompressed_size",E,"Determines the uncompressed size of the specified gzip…",N,[[["file"]],[[R[7],["u64"]],["u64"]]]],[17,"_DERIVE_failure_Fail_FOR_MissingHeaderError",E,E,N,N],[17,"_DERIVE_failure_core_fmt_Display_FOR_MissingHeaderError",E,E,N,N],[17,"_DERIVE_failure_Fail_FOR_UnexpectedContentLengthError",E,E,N,N],[17,"_DERIVE_failure_core_fmt_Display_FOR_UnexpectedContentLengthError",E,E,N,N],[11,"load",R[20],"Loads a tarball from the specified file.",1,[[["file"]],[["error"],["box",[R[20]]],[R[0],["box","error"]]]]],[11,"fetch",E,"Initiate fetching of a tarball from the given URL,…",1,[[["str"],["path"]],[["error"],["box",[R[20]]],[R[0],["box","error"]]]]],[0,"zip",E,R[24],N,N],[3,"Zip","archive::zip",E,N,N],[12,R[19],E,E,2,N],[12,"data",E,E,2,N],[12,R[25],E,E,2,N],[11,"load",R[20],"Loads a cached Node zip archive from the specified file.",2,[[["file"]],[["error"],["box",[R[20]]],[R[0],["box","error"]]]]],[11,"fetch",E,"Initiate fetching of a Node zip archive from the given…",2,[[["str"],["path"]],[["error"],["box",[R[20]]],[R[0],["box","error"]]]]],[17,"_DERIVE_failure_Fail_FOR_HttpError",E,E,N,N],[17,"_DERIVE_failure_core_fmt_Display_FOR_HttpError",E,E,N,N],[8,"Archive",E,E,N,N],[10,R[19],E,E,6,[[["self"]],["u64"]]],[10,R[22],E,E,6,[[["self"]],[[R[7],["u64"]],["u64"]]]],[10,"unpack",E,"Unpacks the zip archive to the specified destination folder.",6,[[["path"],["fnmut"],["box"]],[["error"],[R[0],["error"]]]]],[10,R[25],E,E,6,[[["self"]],[R[25]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[27],E,E,0,[[["self"]],[R[38]]]],[11,R[10],E,E,0,[[[U]],[R[0]]]],[11,R[11],E,E,0,[[],[R[0]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[R[29]]]],[11,R[30],E,E,0,[[["self"]],["fail"]]],[11,R[11],E,E,0,[[],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[10],E,E,1,[[[U]],[R[0]]]],[11,R[11],E,E,1,[[],[R[0]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[R[29]]]],[11,R[11],E,E,1,[[],[R[0]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[10],E,E,2,[[[U]],[R[0]]]],[11,R[11],E,E,2,[[],[R[0]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[R[29]]]],[11,R[11],E,E,2,[[],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[["self"],[T]]]],[11,R[10],E,E,3,[[[U]],[R[0]]]],[11,R[11],E,E,3,[[],[R[0]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[R[29]]]],[11,R[11],E,E,3,[[],[R[0]]]],[11,"into",R[26],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[27],E,E,4,[[["self"]],[R[38]]]],[11,R[10],E,E,4,[[[U]],[R[0]]]],[11,R[11],E,E,4,[[],[R[0]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[R[29]]]],[11,R[30],E,E,4,[[["self"]],["fail"]]],[11,R[11],E,E,4,[[],[R[0]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[27],E,E,5,[[["self"]],[R[38]]]],[11,R[10],E,E,5,[[[U]],[R[0]]]],[11,R[11],E,E,5,[[],[R[0]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[R[29]]]],[11,R[30],E,E,5,[[["self"]],["fail"]]],[11,R[11],E,E,5,[[],[R[0]]]],[11,R[19],R[20],E,1,[[["self"]],["u64"]]],[11,R[22],E,E,1,[[["self"]],[[R[7],["u64"]],["u64"]]]],[11,"unpack",E,E,1,[[["path"],["fnmut"],["box"]],[["error"],[R[0],["error"]]]]],[11,R[25],E,E,1,[[["self"]],[R[25]]]],[11,R[19],E,E,2,[[["self"]],["u64"]]],[11,R[22],E,E,2,[[["self"]],[[R[7],["u64"]],["u64"]]]],[11,"unpack",E,E,2,[[["path"],["fnmut"],["box"]],[["error"],[R[0],["error"]]]]],[11,R[25],E,E,2,[[["self"]],[R[25]]]],[11,"clone",E,E,3,[[["self"]],[R[25]]]],[11,"fmt",R[26],E,4,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[20],E,0,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[26],E,4,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[20],E,0,[[["self"],[R[14]]],[R[0]]]],[11,"name",R[26],E,4,[[["self"]],[["str"],[R[7],["str"]]]]],[11,"cause",E,E,4,[[["self"]],[[R[7],["fail"]],["fail"]]]],[11,R[5],E,E,4,[[["self"]],[[R[7],[R[5]]],[R[5]]]]],[11,"name",E,E,5,[[["self"]],[["str"],[R[7],["str"]]]]],[11,"cause",E,E,5,[[["self"]],[[R[7],["fail"]],["fail"]]]],[11,R[5],E,E,5,[[["self"]],[[R[7],[R[5]]],[R[5]]]]],[11,"name",R[20],E,0,[[["self"]],[["str"],[R[7],["str"]]]]],[11,"cause",E,E,0,[[["self"]],[[R[7],["fail"]],["fail"]]]],[11,R[5],E,E,0,[[["self"]],[[R[7],[R[5]]],[R[5]]]]]],"p":[[3,R[31]],[3,R[32]],[3,"Zip"],[4,"Origin"],[3,R[33]],[3,R[34]],[8,"Archive"]]};
searchIndex["progress_read"]={"doc":"This crate provides an adapter for the `std::io::Read`…","i":[[3,R[1],"progress_read","A reader that reports incremental progress while reading.",N,N],[12,"source",E,E,0,N],[12,"accumulator",E,E,0,N],[12,"progress",E,E,0,N],[11,"new",E,"Construct a new progress reader with the specified…",0,[[["f"],[T],["r"]],["progressread"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[10],E,E,0,[[[U]],[R[0]]]],[11,R[11],E,E,0,[[],[R[0]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[R[29]]]],[11,"read",E,"Read some bytes from the underlying reader into the…",0,[[["self"]],[[R[0],["usize"]],["usize"]]]],[11,"seek",E,E,0,[[["self"],["seekfrom"]],[[R[0],["u64"]],["u64"]]]]],"p":[[3,R[1]]]};
searchIndex["shim"]={"doc":E,"i":[[5,"main","shim",E,N,[[]]],[0,"execute",E,E,N,N],[5,"run_shim","shim::execute",E,N,[[]]]],"p":[]};
searchIndex["volta"]={"doc":E,"i":[[5,"main","volta","The entry point for the `volta` CLI.",N,[[]]],[0,R[41],E,E,N,N],[0,"activate",R[502],E,N,N],[3,R[529],R[515],E,N,N],[11,R[503],E,E,0,[[["app"]],["app"]]],[11,R[504],E,E,0,[[],["bool"]]],[0,"completions",R[502],E,N,N],[3,R[514],R[516],E,N,N],[12,"shell",E,"Shell to generate completions for",1,N],[12,"out_file",E,"File to write generated completions to",1,N],[12,"force",E,"Write over an existing file, if any.",1,N],[11,R[503],E,E,1,[[["app"]],["app"]]],[11,R[504],E,E,1,[[],["bool"]]],[0,"current",R[502],E,N,N],[3,"Current",R[517],E,N,N],[12,R[300],E,"Display the current project's Node version",2,N],[12,"user",E,"Display the user's Node version",2,N],[5,"project_node_version",E,E,N,[[[R[305]]],[[R[263],[R[7]]],[R[7],[R[38]]]]]],[5,"user_node_version",E,E,N,[[[R[305]]],[[R[263],[R[7]]],[R[7],[R[38]]]]]],[11,R[503],E,E,2,[[["app"]],["app"]]],[11,R[504],E,E,2,[[],["bool"]]],[0,"deactivate",R[502],E,N,N],[3,R[317],R[518],E,N,N],[11,R[503],E,E,3,[[["app"]],["app"]]],[11,R[504],E,E,3,[[],["bool"]]],[0,"fetch",R[502],E,N,N],[3,"Fetch",R[519],E,N,N],[12,"tools",E,"Tools to fetch, like `node`, `yarn@latest` or…",4,N],[11,R[503],E,E,4,[[["app"]],["app"]]],[11,R[504],E,E,4,[[],["bool"]]],[0,R[429],R[502],E,N,N],[3,"Install",R[520],E,N,N],[12,"tools",E,"Tools to install, like `node`, `yarn@latest` or…",5,N],[11,R[503],E,E,5,[[["app"]],["app"]]],[11,R[504],E,E,5,[[],["bool"]]],[0,"list",R[502],E,N,N],[3,R[337],R[505],"A package and its associated tools, for displaying to the…",N,N],[12,"name",E,"The name of the package.",6,N],[12,R[45],E,"The package's own version.",6,N],[3,"Node",E,E,N,N],[12,"source",E,E,7,N],[12,R[45],E,E,7,N],[3,R[530],E,E,N,N],[12,"kind",E,E,8,N],[12,"source",E,E,8,N],[12,R[45],E,E,8,N],[3,"List",E,E,N,N],[12,R[511],E,"The tool to lookup: `all`, `node`, `yarn`, or the name of…",9,N],[12,"format",E,"Specify the output format.",9,N],[12,"current",E,"Show the currently-active tool(s).",9,N],[12,"default",E,"Show your default tool(s).",9,N],[4,"Format",E,E,N,N],[13,"Human",E,E,10,N],[13,"Plain",E,E,10,N],[4,"Source",E,"The source of a given item, from the perspective of a user.",N,N],[13,"Project",E,"The item is from a project. The wrapped `PathBuf` is the…",11,N],[13,R[533],E,"The item is the user's default.",11,N],[13,"None",E,"The item is one that has been fetched but is not installed…",11,N],[4,R[534],E,E,N,N],[13,R[533],E,E,12,N],[12,"details",R[506],E,12,N],[12,"node",E,R[507],12,N],[12,"tools",E,R[508],12,N],[13,"Project",R[505],E,12,N],[12,"details",R[506],E,12,N],[12,"node",E,R[507],12,N],[12,"tools",E,R[508],12,N],[12,"path",E,E,12,N],[13,"Fetched",R[505],E,12,N],[4,R[531],E,E,N,N],[13,"Yarn",E,E,13,N],[13,"Npm",E,E,13,N],[4,"Filter",E,"How (if at all) should the list query be narrowed?",N,N],[13,"Current",E,"Display only the currently active tool(s).",14,N],[13,R[533],E,"Show only the user's default tool(s).",14,N],[13,"None",E,"Do not filter at all. Show all tool(s) matching the query.",14,N],[4,R[512],E,"Which tool should we look up?",N,N],[13,"All",E,"Show every item in the toolchain.",15,N],[13,"Node",E,"Show locally cached Node versions.",15,N],[13,"Yarn",E,"Show locally cached Yarn versions.",15,N],[13,"PackageOrTool",E,"Show locally cached versions of a package or a package…",15,N],[12,"name","volta::command::list::Subcommand",E,15,N],[5,"human_fallback",R[505],E,N,[[[R[309]]],[[R[7],[R[38]]],[R[38]]]]],[0,"plain",E,"Define the \"plain\" format style for list commands.",N,N],[5,"format","volta::command::list::plain",E,N,[[[R[309]]],[[R[7],[R[38]]],[R[38]]]]],[5,"describe_runtimes",E,E,N,[[],[[R[7],[R[38]]],[R[38]]]]],[5,"describe_package_managers",E,E,N,[[],[[R[7],[R[38]]],[R[38]]]]],[5,"describe_packages",E,E,N,[[],[[R[7],[R[38]]],[R[38]]]]],[5,"describe_tool_set",E,E,N,[[["str"]],[R[38]]]],[5,"display_node",E,E,N,[[["source"],[R[45]]],[R[38]]]],[5,"display_package_manager",E,E,N,[[[R[526]]],[R[38]]]],[5,"package_source",E,E,N,[[[R[42]]],[R[38]]]],[5,"display_package",E,E,N,[[[R[42]]],[R[38]]]],[5,"display_tool",E,E,N,[[["str"],[R[42]]],[[R[7],[R[38]]],[R[38]]]]],[0,R[309],R[505],E,N,N],[4,R[499],R[509],E,N,N],[13,"Node",E,E,16,N],[13,"PackageManagers",E,E,16,N],[13,"Packages",E,E,16,N],[13,"Tool",E,E,16,N],[12,"name",R[510],E,16,N],[12,"host_packages",E,E,16,N],[13,"Active",R[509],E,16,N],[12,"runtime",R[510],E,16,N],[12,"package_manager",E,E,16,N],[12,R[532],E,E,16,N],[13,"All",R[509],E,16,N],[12,"runtimes",R[510],E,16,N],[12,"package_managers",E,E,16,N],[12,R[532],E,E,16,N],[4,"Lookup",R[509],"Lightweight rule for which item to get the `Source` for.",N,N],[13,"Runtime",E,"Look up the Node runtime",17,N],[13,"Yarn",E,"Look up the Yarn package manager",17,N],[5,"tool_source",E,"Look up the `Source` for a tool with a given name.",N,[[["str"],[R[7],[R[300]]],[R[300]],[R[45]]],[[R[263],["source"]],["source"]]]],[11,"version_from_spec",E,E,17,[[]]],[11,"version_source",E,E,17,[[[R[7],[R[300]]],[R[7]],[R[300]],[R[45]]],["source"]]],[11,"active_tool",E,"Determine the `Source` for a given kind of tool (`Lookup`).",17,[[[R[7]],[R[7],[R[300]]],[R[300]]],[R[7]]]],[11,"active",E,E,16,[[[R[275]],[R[7],[R[300]]],[R[7]],[R[300]]],[[R[309]],[R[263],[R[309]]]]]],[11,"all",E,E,16,[[[R[275]],[R[7],[R[300]]],[R[7]],[R[300]]],[[R[309]],[R[263],[R[309]]]]]],[11,"node",E,E,16,[[[R[275]],[R[7],[R[300]]],[R[300]],[R[7]],["filter"]],[R[309]]]],[11,"yarn",E,E,16,[[[R[275]],[R[7],[R[300]]],[R[300]],[R[7]],["filter"]],[R[309]]]],[11,"package_or_tool",E,E,16,[[["str"],[R[275]],[R[7],[R[300]]],[R[300]],["filter"]],[[R[309]],[R[263],[R[309]]]]]],[11,"allowed_with",R[505],E,11,[[["self"],["filter"]],["bool"]]],[11,"new",E,E,12,[[[R[432]],["source"]],[R[42]]]],[11,"from_inventory_and_project",E,E,12,[[[R[275]],[R[7],[R[300]]],[R[300]]],[["vec",[R[42]]],[R[42]]]]],[11,"source",E,E,12,[[["str"],[R[7],[R[300]]],[R[300]],[R[45]]],["source"]]],[11,R[503],E,E,9,[[["app"]],["app"]]],[11,R[504],E,E,9,[[],["bool"]]],[11,"output_format",E,E,9,[[["self"]],["format"]]],[11,R[511],E,E,9,[[["self"]],[[R[7],[R[511]]],[R[511]]]]],[0,"pin",R[502],E,N,N],[3,"Pin",R[521],E,N,N],[12,"tools",E,"Tools to pin, like `node@lts` or `yarn@^1.14`.",18,N],[11,R[503],E,E,18,[[["app"]],["app"]]],[11,R[504],E,E,18,[[],["bool"]]],[0,R[394],R[502],E,N,N],[3,R[513],R[522],E,N,N],[12,"tool",E,"The tool to uninstall, e.g. `node`, `npm`, `yarn`, or ",19,N],[11,R[503],E,E,19,[[["app"]],["app"]]],[11,R[504],E,E,19,[[],["bool"]]],[0,"use",R[502],E,N,N],[3,"Use",R[523],E,N,N],[12,"anything",E,E,20,N],[17,"USAGE",E,E,N,N],[17,"ADVICE",E,E,N,N],[11,R[503],E,E,20,[[["app"]],["app"]]],[11,R[504],E,E,20,[[],["bool"]]],[0,"which",R[502],E,N,N],[3,"Which",R[524],E,N,N],[12,"binary",E,"The binary to find, e.g. `node` or `npm`",21,N],[11,R[503],E,E,21,[[["app"]],["app"]]],[11,R[504],E,E,21,[[],["bool"]]],[8,"Command",R[502],"A Volta command.",N,N],[10,"run",E,"Executes the command. Returns `Ok(true)` if the process…",22,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[0,"cli","volta",E,N,N],[3,"Volta",R[525],E,N,N],[12,R[41],E,E,23,N],[12,"verbose",E,E,23,N],[12,"quiet",E,E,23,N],[12,R[45],E,E,23,N],[4,R[512],E,E,N,N],[13,"Fetch",E,"Fetches a tool to the local machine",24,N],[13,"Install",E,"Installs a tool in your toolchain",24,N],[13,R[513],E,"Uninstalls a tool from your toolchain",24,N],[13,"Pin",E,"Pins your project's runtime or package manager",24,N],[13,"List",E,"Displays the current toolchain",24,N],[13,"Current",E,"[DEPRECATED] Displays the currently activated Node version",24,N],[13,R[317],E,"[DEPRECATED] Disables Volta in the current shell",24,N],[13,R[529],E,"[DEPRECATED] Re-enables Volta in the current shell",24,N],[13,R[514],E,"Generates Volta completions",24,N],[13,"Which",E,"Locates the actual binary that will be called by Volta",24,N],[13,"Use",E,E,24,N],[11,R[503],E,E,23,[[["app"]],["app"]]],[11,R[504],E,E,23,[[],["bool"]]],[11,"run",E,E,23,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,R[503],E,E,24,[[["app"]],["app"]]],[11,"from_subcommand",E,E,24,[[],[R[7]]]],[11,R[504],E,E,24,[[],["bool"]]],[11,"run",E,E,24,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,"into",R[515],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[10],E,E,0,[[[U]],[R[0]]]],[11,R[11],E,E,0,[[],[R[0]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[R[29]]]],[11,R[11],E,E,0,[[],[R[0]]]],[11,"into",R[516],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[10],E,E,1,[[[U]],[R[0]]]],[11,R[11],E,E,1,[[],[R[0]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[R[29]]]],[11,R[11],E,E,1,[[],[R[0]]]],[11,"into",R[517],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[10],E,E,2,[[[U]],[R[0]]]],[11,R[11],E,E,2,[[],[R[0]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[R[29]]]],[11,R[11],E,E,2,[[],[R[0]]]],[11,"into",R[518],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[10],E,E,3,[[[U]],[R[0]]]],[11,R[11],E,E,3,[[],[R[0]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[R[29]]]],[11,R[11],E,E,3,[[],[R[0]]]],[11,"into",R[519],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[10],E,E,4,[[[U]],[R[0]]]],[11,R[11],E,E,4,[[],[R[0]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[R[29]]]],[11,R[11],E,E,4,[[],[R[0]]]],[11,"into",R[520],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[10],E,E,5,[[[U]],[R[0]]]],[11,R[11],E,E,5,[[],[R[0]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[R[29]]]],[11,R[11],E,E,5,[[],[R[0]]]],[11,"into",R[505],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[10],E,E,6,[[[U]],[R[0]]]],[11,R[11],E,E,6,[[],[R[0]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[R[29]]]],[11,R[11],E,E,6,[[],[R[0]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[["self"],[T]]]],[11,R[10],E,E,7,[[[U]],[R[0]]]],[11,R[11],E,E,7,[[],[R[0]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[R[29]]]],[11,R[11],E,E,7,[[],[R[0]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[["self"],[T]]]],[11,R[10],E,E,8,[[[U]],[R[0]]]],[11,R[11],E,E,8,[[],[R[0]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[R[29]]]],[11,R[11],E,E,8,[[],[R[0]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[10],E,E,9,[[[U]],[R[0]]]],[11,R[11],E,E,9,[[],[R[0]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[R[29]]]],[11,R[11],E,E,9,[[],[R[0]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[["self"],[T]]]],[11,R[10],E,E,10,[[[U]],[R[0]]]],[11,R[11],E,E,10,[[],[R[0]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[R[29]]]],[11,R[10],E,E,10,[[["str"]],[R[0]]]],[11,R[11],E,E,10,[[],[R[0]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[["self"],[T]]]],[11,R[27],E,E,11,[[["self"]],[R[38]]]],[11,R[10],E,E,11,[[[U]],[R[0]]]],[11,R[11],E,E,11,[[],[R[0]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[R[29]]]],[11,R[11],E,E,11,[[],[R[0]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[10],E,E,12,[[[U]],[R[0]]]],[11,R[11],E,E,12,[[],[R[0]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[R[29]]]],[11,R[11],E,E,12,[[],[R[0]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[35],E,E,13,[[["self"]],[T]]],[11,R[36],E,E,13,[[["self"],[T]]]],[11,R[27],E,E,13,[[["self"]],[R[38]]]],[11,R[10],E,E,13,[[[U]],[R[0]]]],[11,R[11],E,E,13,[[],[R[0]]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[12],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[R[29]]]],[11,R[11],E,E,13,[[],[R[0]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[10],E,E,14,[[[U]],[R[0]]]],[11,R[11],E,E,14,[[],[R[0]]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[R[29]]]],[11,R[11],E,E,14,[[],[R[0]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[10],E,E,15,[[[U]],[R[0]]]],[11,R[11],E,E,15,[[],[R[0]]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[12],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[R[29]]]],[11,R[11],E,E,15,[[],[R[0]]]],[11,"into",R[509],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[10],E,E,16,[[[U]],[R[0]]]],[11,R[11],E,E,16,[[],[R[0]]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[12],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[R[29]]]],[11,R[11],E,E,16,[[],[R[0]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[10],E,E,17,[[[U]],[R[0]]]],[11,R[11],E,E,17,[[],[R[0]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[12],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[R[29]]]],[11,R[11],E,E,17,[[],[R[0]]]],[11,"into",R[521],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[10],E,E,18,[[[U]],[R[0]]]],[11,R[11],E,E,18,[[],[R[0]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[12],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[R[29]]]],[11,R[11],E,E,18,[[],[R[0]]]],[11,"into",R[522],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[10],E,E,19,[[[U]],[R[0]]]],[11,R[11],E,E,19,[[],[R[0]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[12],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[R[29]]]],[11,R[11],E,E,19,[[],[R[0]]]],[11,"into",R[523],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[10],E,E,20,[[[U]],[R[0]]]],[11,R[11],E,E,20,[[],[R[0]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[12],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[R[29]]]],[11,R[11],E,E,20,[[],[R[0]]]],[11,"into",R[524],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[10],E,E,21,[[[U]],[R[0]]]],[11,R[11],E,E,21,[[],[R[0]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[12],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[R[29]]]],[11,R[11],E,E,21,[[],[R[0]]]],[11,"into",R[525],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[10],E,E,23,[[[U]],[R[0]]]],[11,R[11],E,E,23,[[],[R[0]]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[12],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[R[29]]]],[11,R[11],E,E,23,[[],[R[0]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[10],E,E,24,[[[U]],[R[0]]]],[11,R[11],E,E,24,[[],[R[0]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[12],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[R[29]]]],[11,R[11],E,E,24,[[],[R[0]]]],[11,"run",R[515],E,0,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,"run",R[516],E,1,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,"run",R[517],E,2,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,"run",R[518],E,3,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,"run",R[519],E,4,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,"run",R[520],E,5,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,"run",R[505],E,9,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,"run",R[521],E,18,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,"run",R[522],E,19,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,"run",R[523],E,20,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,"run",R[524],E,21,[[[R[305]]],[[R[263],[R[9]]],[R[9]]]]],[11,"from",R[505],E,15,[[["str"]],["self"]]],[11,"clone",E,E,10,[[["self"]],["format"]]],[11,"clone",E,E,11,[[["self"]],["source"]]],[11,"clone",E,E,7,[[["self"]],["node"]]],[11,"clone",E,E,13,[[["self"]],["packagemanagerkind"]]],[11,"clone",E,E,8,[[["self"]],[R[526]]]],[11,"eq",E,E,10,[[["self"],["format"]],["bool"]]],[11,"eq",E,E,11,[[["source"],["self"]],["bool"]]],[11,"ne",E,E,11,[[["source"],["self"]],["bool"]]],[11,"fmt",E,E,11,[[[R[14]],["self"]],[R[0]]]],[11,"fmt",E,E,13,[[[R[14]],["self"]],[R[0]]]],[11,"fmt",R[516],E,1,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[505],E,11,[[["self"],[R[14]]],[R[0]]]],[11,R[535],E,E,10,[[["str"]],[R[0]]]],[11,"clap",R[515],E,0,[[],["app"]]],[11,R[527],E,E,0,[[[R[528]]],["self"]]],[11,"clap",R[516],E,1,[[],["app"]]],[11,R[527],E,E,1,[[[R[528]]],["self"]]],[11,"clap",R[517],E,2,[[],["app"]]],[11,R[527],E,E,2,[[[R[528]]],["self"]]],[11,"clap",R[518],E,3,[[],["app"]]],[11,R[527],E,E,3,[[[R[528]]],["self"]]],[11,"clap",R[519],E,4,[[],["app"]]],[11,R[527],E,E,4,[[[R[528]]],["self"]]],[11,"clap",R[520],E,5,[[],["app"]]],[11,R[527],E,E,5,[[[R[528]]],["self"]]],[11,"clap",R[505],E,9,[[],["app"]]],[11,R[527],E,E,9,[[[R[528]]],["self"]]],[11,"clap",R[521],E,18,[[],["app"]]],[11,R[527],E,E,18,[[[R[528]]],["self"]]],[11,"clap",R[522],E,19,[[],["app"]]],[11,R[527],E,E,19,[[[R[528]]],["self"]]],[11,"clap",R[523],E,20,[[],["app"]]],[11,R[527],E,E,20,[[[R[528]]],["self"]]],[11,"clap",R[524],E,21,[[],["app"]]],[11,R[527],E,E,21,[[[R[528]]],["self"]]],[11,"clap",R[525],E,23,[[],["app"]]],[11,R[527],E,E,23,[[[R[528]]],["self"]]],[11,"clap",E,E,24,[[],["app"]]],[11,R[527],E,E,24,[[[R[528]]],["self"]]]],"p":[[3,R[529]],[3,R[514]],[3,"Current"],[3,R[317]],[3,"Fetch"],[3,"Install"],[3,R[337]],[3,"Node"],[3,R[530]],[3,"List"],[4,"Format"],[4,"Source"],[4,R[534]],[4,R[531]],[4,"Filter"],[4,R[512]],[4,R[499]],[4,"Lookup"],[3,"Pin"],[3,R[513]],[3,"Use"],[3,"Which"],[8,"Command"],[3,"Volta"],[4,R[512]]]};
searchIndex["volta_core"]={"doc":"The main implementation crate for the core of Volta.","i":[[0,R[41],R[37],E,N,N],[5,"create_command","volta_core::command",E,N,[[["e"]],[R[41]]]],[0,"env",R[37],"Provides utilities for extracting standard Volta…",N,N],[5,"shell_name","volta_core::env",E,N,[[],[[R[7],[R[38]]],[R[38]]]]],[5,R[319],E,E,N,[[],[[R[7],[R[279]]],[R[279]]]]],[17,"UNSAFE_GLOBAL",E,E,N,N],[0,"error",R[37],E,N,N],[4,R[46],R[39],E,N,N],[13,R[47],E,E,0,N],[13,"Unknown",E,E,0,N],[4,R[48],E,E,N,N],[13,R[49],E,R[50],1,N],[12,R[51],R[40],E,1,N],[12,R[52],E,E,1,N],[12,R[53],E,E,1,N],[13,R[54],R[39],R[56],1,N],[13,R[57],E,R[58],1,N],[12,"name",R[40],E,1,N],[13,R[60],R[39],R[61],1,N],[13,R[62],E,R[63],1,N],[12,R[41],R[40],E,1,N],[13,R[64],R[39],R[65],1,N],[12,R[42],R[40],E,1,N],[13,R[66],R[39],R[67],1,N],[12,"path",R[40],E,1,N],[13,R[68],R[39],R[69],1,N],[12,"path",R[40],E,1,N],[13,R[70],R[39],E,1,N],[13,R[71],E,E,1,N],[12,"dir",R[40],E,1,N],[13,R[72],R[39],R[73],1,N],[12,R[76],R[40],E,1,N],[13,R[74],R[39],R[75],1,N],[12,R[76],R[40],E,1,N],[13,R[77],R[39],R[78],1,N],[12,R[76],R[40],E,1,N],[13,R[79],R[39],E,1,N],[13,R[80],E,R[81],1,N],[12,R[82],R[40],E,1,N],[13,R[83],R[39],R[84],1,N],[12,"file",R[40],E,1,N],[13,R[85],R[39],E,1,N],[12,R[41],R[40],E,1,N],[12,"advice",E,E,1,N],[13,R[86],R[39],R[87],1,N],[12,"bin",R[40],E,1,N],[13,R[88],R[39],E,1,N],[12,"tool",R[40],E,1,N],[12,R[43],E,E,1,N],[13,R[89],R[39],R[90],1,N],[12,R[41],R[40],E,1,N],[13,R[91],R[39],R[92],1,N],[12,"bin",R[40],E,1,N],[13,R[93],R[39],R[94],1,N],[12,R[41],R[40],E,1,N],[13,R[95],R[39],R[96],1,N],[12,R[41],R[40],E,1,N],[13,R[97],R[39],R[98],1,N],[13,R[99],E,R[100],1,N],[13,R[101],E,R[102],1,N],[12,R[41],R[40],E,1,N],[13,R[103],R[39],E,1,N],[12,R[41],R[40],E,1,N],[13,R[104],R[39],R[105],1,N],[12,R[41],R[40],E,1,N],[13,R[106],R[39],R[107],1,N],[12,"action",R[40],E,1,N],[12,"name",E,E,1,N],[12,R[45],E,E,1,N],[13,R[108],R[39],R[109],1,N],[12,"name",R[40],E,1,N],[12,"errors",E,E,1,N],[13,R[110],R[39],R[111],1,N],[12,"binary",R[40],E,1,N],[13,R[112],R[39],R[113],1,N],[12,R[44],R[40],E,1,N],[13,R[114],R[39],E,1,N],[12,R[42],R[40],E,1,N],[13,R[115],R[39],E,1,N],[13,R[116],E,R[117],1,N],[13,R[118],E,E,1,N],[13,R[119],E,R[120],1,N],[13,R[121],E,R[122],1,N],[13,R[123],E,R[124],1,N],[13,R[125],E,R[126],1,N],[13,R[127],E,R[128],1,N],[13,R[129],E,R[130],1,N],[13,R[131],E,E,1,N],[13,R[132],E,R[133],1,N],[12,R[42],R[40],E,1,N],[13,R[134],R[39],R[135],1,N],[12,R[42],R[40],E,1,N],[13,R[136],R[39],R[137],1,N],[12,R[42],R[40],E,1,N],[13,R[138],R[39],R[139],1,N],[12,R[42],R[40],E,1,N],[13,R[140],R[39],E,1,N],[12,R[45],R[40],E,1,N],[13,R[141],R[39],R[142],1,N],[13,R[143],E,R[144],1,N],[12,R[43],R[40],E,1,N],[13,R[145],R[39],R[146],1,N],[12,R[42],R[40],E,1,N],[13,R[147],R[39],R[148],1,N],[12,"file",R[40],E,1,N],[13,R[149],R[39],R[150],1,N],[12,"file",R[40],E,1,N],[13,R[151],R[39],R[152],1,N],[13,R[153],E,R[154],1,N],[12,"name",R[40],E,1,N],[12,R[44],E,E,1,N],[13,R[155],R[39],R[156],1,N],[12,"file",R[40],E,1,N],[13,R[157],R[39],R[158],1,N],[13,R[159],E,R[160],1,N],[12,"file",R[40],E,1,N],[13,R[161],R[39],R[162],1,N],[13,R[163],E,R[164],1,N],[12,R[43],R[40],E,1,N],[13,R[165],R[39],R[166],1,N],[13,R[167],E,R[168],1,N],[13,R[169],E,R[170],1,N],[13,R[171],E,R[172],1,N],[12,R[43],R[40],E,1,N],[13,R[173],R[39],R[174],1,N],[13,R[175],E,R[176],1,N],[12,R[177],R[40],E,1,N],[13,R[178],R[39],R[179],1,N],[12,"tool",R[40],E,1,N],[13,R[180],R[39],R[181],1,N],[12,R[41],R[40],E,1,N],[13,R[182],R[39],R[183],1,N],[12,R[41],R[40],E,1,N],[13,R[184],R[39],R[185],1,N],[13,R[186],E,R[187],1,N],[13,R[188],E,R[189],1,N],[12,"dir",R[40],E,1,N],[13,R[190],R[39],R[191],1,N],[12,"file",R[40],E,1,N],[13,R[192],R[39],R[193],1,N],[12,"file",R[40],E,1,N],[13,R[194],R[39],R[195],1,N],[12,"file",R[40],E,1,N],[13,R[196],R[39],R[197],1,N],[12,"dir",R[40],E,1,N],[13,R[198],R[39],R[199],1,N],[12,"file",R[40],E,1,N],[13,R[200],R[39],R[201],1,N],[12,"file",R[40],E,1,N],[13,R[202],R[39],R[203],1,N],[13,R[204],E,R[205],1,N],[12,"file",R[40],E,1,N],[13,R[206],R[39],R[207],1,N],[12,"file",R[40],E,1,N],[13,R[208],R[39],R[209],1,N],[12,"tool",R[40],E,1,N],[12,R[43],E,E,1,N],[13,R[210],R[39],R[211],1,N],[12,"tool",R[40],E,1,N],[12,R[45],E,E,1,N],[12,"dir",E,E,1,N],[13,R[212],R[39],R[213],1,N],[12,"name",R[40],E,1,N],[13,R[214],R[39],R[215],1,N],[13,R[216],E,R[217],1,N],[12,"name",R[40],E,1,N],[13,R[218],R[39],R[219],1,N],[12,"name",R[40],E,1,N],[13,R[220],R[39],R[221],1,N],[13,R[222],E,R[223],1,N],[13,R[224],E,R[225],1,N],[13,R[226],E,R[227],1,N],[13,R[228],E,R[229],1,N],[12,"feature",R[40],E,1,N],[13,R[230],R[39],R[231],1,N],[12,"tool",R[40],E,1,N],[12,R[45],E,E,1,N],[13,R[232],R[39],R[233],1,N],[12,"name",R[40],E,1,N],[13,R[234],R[39],R[235],1,N],[13,R[236],E,R[237],1,N],[13,R[238],E,E,1,N],[12,R[45],R[40],E,1,N],[13,R[239],R[39],R[240],1,N],[12,"file",R[40],E,1,N],[13,R[241],R[39],R[242],1,N],[12,"file",R[40],E,1,N],[13,R[243],R[39],R[244],1,N],[12,"file",R[40],E,1,N],[13,R[245],R[39],R[246],1,N],[12,"file",R[40],E,1,N],[13,R[247],R[39],R[248],1,N],[12,"file",R[40],E,1,N],[13,R[249],R[39],R[250],1,N],[12,R[42],R[40],E,1,N],[12,R[45],E,E,1,N],[12,"file",E,E,1,N],[13,R[251],R[39],R[252],1,N],[12,"file",R[40],E,1,N],[13,R[253],R[39],R[254],1,N],[12,R[43],R[40],E,1,N],[13,R[255],R[39],R[256],1,N],[12,R[44],R[40],E,1,N],[5,R[257],R[39],R[258],N,[[["str"],[R[4]]]]],[0,"details",E,E,N,N],[4,R[46],R[55],E,N,N],[13,R[47],E,E,0,N],[13,"Unknown",E,E,0,N],[4,R[48],E,E,N,N],[13,R[49],E,R[50],1,N],[12,R[51],R[59],E,1,N],[12,R[52],E,E,1,N],[12,R[53],E,E,1,N],[13,R[54],R[55],R[56],1,N],[13,R[57],E,R[58],1,N],[12,"name",R[59],E,1,N],[13,R[60],R[55],R[61],1,N],[13,R[62],E,R[63],1,N],[12,R[41],R[59],E,1,N],[13,R[64],R[55],R[65],1,N],[12,R[42],R[59],E,1,N],[13,R[66],R[55],R[67],1,N],[12,"path",R[59],E,1,N],[13,R[68],R[55],R[69],1,N],[12,"path",R[59],E,1,N],[13,R[70],R[55],E,1,N],[13,R[71],E,E,1,N],[12,"dir",R[59],E,1,N],[13,R[72],R[55],R[73],1,N],[12,R[76],R[59],E,1,N],[13,R[74],R[55],R[75],1,N],[12,R[76],R[59],E,1,N],[13,R[77],R[55],R[78],1,N],[12,R[76],R[59],E,1,N],[13,R[79],R[55],E,1,N],[13,R[80],E,R[81],1,N],[12,R[82],R[59],E,1,N],[13,R[83],R[55],R[84],1,N],[12,"file",R[59],E,1,N],[13,R[85],R[55],E,1,N],[12,R[41],R[59],E,1,N],[12,"advice",E,E,1,N],[13,R[86],R[55],R[87],1,N],[12,"bin",R[59],E,1,N],[13,R[88],R[55],E,1,N],[12,"tool",R[59],E,1,N],[12,R[43],E,E,1,N],[13,R[89],R[55],R[90],1,N],[12,R[41],R[59],E,1,N],[13,R[91],R[55],R[92],1,N],[12,"bin",R[59],E,1,N],[13,R[93],R[55],R[94],1,N],[12,R[41],R[59],E,1,N],[13,R[95],R[55],R[96],1,N],[12,R[41],R[59],E,1,N],[13,R[97],R[55],R[98],1,N],[13,R[99],E,R[100],1,N],[13,R[101],E,R[102],1,N],[12,R[41],R[59],E,1,N],[13,R[103],R[55],E,1,N],[12,R[41],R[59],E,1,N],[13,R[104],R[55],R[105],1,N],[12,R[41],R[59],E,1,N],[13,R[106],R[55],R[107],1,N],[12,"action",R[59],E,1,N],[12,"name",E,E,1,N],[12,R[45],E,E,1,N],[13,R[108],R[55],R[109],1,N],[12,"name",R[59],E,1,N],[12,"errors",E,E,1,N],[13,R[110],R[55],R[111],1,N],[12,"binary",R[59],E,1,N],[13,R[112],R[55],R[113],1,N],[12,R[44],R[59],E,1,N],[13,R[114],R[55],E,1,N],[12,R[42],R[59],E,1,N],[13,R[115],R[55],E,1,N],[13,R[116],E,R[117],1,N],[13,R[118],E,E,1,N],[13,R[119],E,R[120],1,N],[13,R[121],E,R[122],1,N],[13,R[123],E,R[124],1,N],[13,R[125],E,R[126],1,N],[13,R[127],E,R[128],1,N],[13,R[129],E,R[130],1,N],[13,R[131],E,E,1,N],[13,R[132],E,R[133],1,N],[12,R[42],R[59],E,1,N],[13,R[134],R[55],R[135],1,N],[12,R[42],R[59],E,1,N],[13,R[136],R[55],R[137],1,N],[12,R[42],R[59],E,1,N],[13,R[138],R[55],R[139],1,N],[12,R[42],R[59],E,1,N],[13,R[140],R[55],E,1,N],[12,R[45],R[59],E,1,N],[13,R[141],R[55],R[142],1,N],[13,R[143],E,R[144],1,N],[12,R[43],R[59],E,1,N],[13,R[145],R[55],R[146],1,N],[12,R[42],R[59],E,1,N],[13,R[147],R[55],R[148],1,N],[12,"file",R[59],E,1,N],[13,R[149],R[55],R[150],1,N],[12,"file",R[59],E,1,N],[13,R[151],R[55],R[152],1,N],[13,R[153],E,R[154],1,N],[12,"name",R[59],E,1,N],[12,R[44],E,E,1,N],[13,R[155],R[55],R[156],1,N],[12,"file",R[59],E,1,N],[13,R[157],R[55],R[158],1,N],[13,R[159],E,R[160],1,N],[12,"file",R[59],E,1,N],[13,R[161],R[55],R[162],1,N],[13,R[163],E,R[164],1,N],[12,R[43],R[59],E,1,N],[13,R[165],R[55],R[166],1,N],[13,R[167],E,R[168],1,N],[13,R[169],E,R[170],1,N],[13,R[171],E,R[172],1,N],[12,R[43],R[59],E,1,N],[13,R[173],R[55],R[174],1,N],[13,R[175],E,R[176],1,N],[12,R[177],R[59],E,1,N],[13,R[178],R[55],R[179],1,N],[12,"tool",R[59],E,1,N],[13,R[180],R[55],R[181],1,N],[12,R[41],R[59],E,1,N],[13,R[182],R[55],R[183],1,N],[12,R[41],R[59],E,1,N],[13,R[184],R[55],R[185],1,N],[13,R[186],E,R[187],1,N],[13,R[188],E,R[189],1,N],[12,"dir",R[59],E,1,N],[13,R[190],R[55],R[191],1,N],[12,"file",R[59],E,1,N],[13,R[192],R[55],R[193],1,N],[12,"file",R[59],E,1,N],[13,R[194],R[55],R[195],1,N],[12,"file",R[59],E,1,N],[13,R[196],R[55],R[197],1,N],[12,"dir",R[59],E,1,N],[13,R[198],R[55],R[199],1,N],[12,"file",R[59],E,1,N],[13,R[200],R[55],R[201],1,N],[12,"file",R[59],E,1,N],[13,R[202],R[55],R[203],1,N],[13,R[204],E,R[205],1,N],[12,"file",R[59],E,1,N],[13,R[206],R[55],R[207],1,N],[12,"file",R[59],E,1,N],[13,R[208],R[55],R[209],1,N],[12,"tool",R[59],E,1,N],[12,R[43],E,E,1,N],[13,R[210],R[55],R[211],1,N],[12,"tool",R[59],E,1,N],[12,R[45],E,E,1,N],[12,"dir",E,E,1,N],[13,R[212],R[55],R[213],1,N],[12,"name",R[59],E,1,N],[13,R[214],R[55],R[215],1,N],[13,R[216],E,R[217],1,N],[12,"name",R[59],E,1,N],[13,R[218],R[55],R[219],1,N],[12,"name",R[59],E,1,N],[13,R[220],R[55],R[221],1,N],[13,R[222],E,R[223],1,N],[13,R[224],E,R[225],1,N],[13,R[226],E,R[227],1,N],[13,R[228],E,R[229],1,N],[12,"feature",R[59],E,1,N],[13,R[230],R[55],R[231],1,N],[12,"tool",R[59],E,1,N],[12,R[45],E,E,1,N],[13,R[232],R[55],R[233],1,N],[12,"name",R[59],E,1,N],[13,R[234],R[55],R[235],1,N],[13,R[236],E,R[237],1,N],[13,R[238],E,E,1,N],[12,R[45],R[59],E,1,N],[13,R[239],R[55],R[240],1,N],[12,"file",R[59],E,1,N],[13,R[241],R[55],R[242],1,N],[12,"file",R[59],E,1,N],[13,R[243],R[55],R[244],1,N],[12,"file",R[59],E,1,N],[13,R[245],R[55],R[246],1,N],[12,"file",R[59],E,1,N],[13,R[247],R[55],R[248],1,N],[12,"file",R[59],E,1,N],[13,R[249],R[55],R[250],1,N],[12,R[42],R[59],E,1,N],[12,R[45],E,E,1,N],[12,"file",E,E,1,N],[13,R[251],R[55],R[252],1,N],[12,"file",R[59],E,1,N],[13,R[253],R[55],R[254],1,N],[12,R[43],R[59],E,1,N],[13,R[255],R[55],R[256],1,N],[12,R[44],R[59],E,1,N],[17,"REPORT_BUG_CTA",R[55],E,N,N],[17,"PERMISSIONS_CTA",E,E,N,N],[17,"_DERIVE_failure_Fail_FOR_ErrorDetails",E,E,N,N],[0,"reporter",R[39],E,N,N],[5,R[257],"volta_core::error::reporter",R[258],N,[[["str"],[R[4]]]]],[5,"write_error_log",E,"Write an error log with all details about the error",N,[[["str"],[R[38]]],[[R[0],[R[279],"error"]],["error"],[R[279]]]]],[5,"compose_error_details",E,E,N,[[[R[4]]],[[R[7],[R[38]]],[R[38]]]]],[5,"collect_arguments",E,"Combines all the arguments into a single String",N,[[],[R[38]]]],[0,"event",R[37],"Events for the sessions in executables and shims and…",N,N],[3,"Event",R[259],E,N,N],[12,"timestamp",E,E,2,N],[12,"name",E,E,2,N],[12,"event",E,E,2,N],[3,"ErrorEnv",E,E,N,N],[12,"argv",E,E,3,N],[12,"exec_path",E,E,3,N],[12,"path",E,E,3,N],[12,R[291],E,E,3,N],[12,"platform_version",E,E,3,N],[3,"EventLog",E,E,N,N],[12,"events",E,E,4,N],[4,R[445],E,E,N,N],[13,"Start",E,E,5,N],[13,"End",E,E,5,N],[12,R[2],R[260],E,5,N],[13,"Error",R[259],E,5,N],[12,R[2],R[260],E,5,N],[12,"error",E,E,5,N],[12,"env",E,E,5,N],[13,"ToolEnd",R[259],E,5,N],[12,R[2],R[260],E,5,N],[5,"unix_timestamp",R[259],E,N,[[],["u64"]]],[5,"get_error_env",E,E,N,[[],["errorenv"]]],[17,"_IMPL_SERIALIZE_FOR_Event",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ErrorEnv",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_EventKind",E,E,N,N],[11,"into_event",E,E,5,[[[R[261]]],["event"]]],[11,"init",E,"Constructs a new 'EventLog'",4,[[],["self"]]],[11,R[313],E,E,4,[[[R[261]],["self"]]]],[11,R[314],E,E,4,[[[R[261]],["self"],[R[9]]]]],[11,R[315],E,E,4,[[[R[261]],["self"],["i32"]]]],[11,R[316],E,E,4,[[[R[261]],["self"],[R[4]]]]],[11,"add_event",E,E,4,[[[R[261]],["self"],["eventkind"]]]],[11,R[311],E,E,4,[[["self"],[R[311]],[R[7],[R[311]]]]]],[0,"fs",R[37],"Provides utilities for operating on the filesystem.",N,N],[5,"touch","volta_core::fs","Opens a file, creating it if it doesn't exist",N,[[["path"]],[[R[0],["file"]],["file"]]]],[5,"ensure_dir_does_not_exist",E,"This deletes the input directory, if it exists",N,[[["p"]],[R[263]]]],[5,"delete_dir_error",E,E,N,[[["p"]]]],[5,"delete_file_error",E,E,N,[[["p"]]]],[5,"read_file",E,"Reads a file, if it exists.",N,[[["path"],["asref",["path"]]],[[R[0],[R[7]]],[R[7],[R[38]]]]]],[5,"read_dir_eager",E,"Reads the full contents of a directory, eagerly extracting…",N,[[["path"]],[R[0]]]],[5,"dir_entry_match",E,"Reads the contents of a directory and returns a Vec of the…",N,[[["f"],["path"]],[["vec"],[R[0],["vec"]]]]],[5,"create_staging_file",E,"Creates a NamedTempFile in the Volta tmp directory",N,[[],[[R[263],[R[262]]],[R[262]]]]],[5,"create_staging_dir",E,"Creates a staging directory in the Volta tmp directory",N,[[],[["tempdir"],[R[263],["tempdir"]]]]],[5,"symlink_file",E,"Create a symlink. The `dst` path will be a symbolic link…",N,[[["s"],["d"]],[R[0]]]],[0,"hook",R[37],"Provides types for working with Volta hooks.",N,N],[3,R[446],R[268],"Lazily loaded Volta hook configuration",N,N],[12,"settings",E,E,6,N],[3,R[447],E,"Volta hook configuration",N,N],[12,"node",E,E,7,N],[12,"yarn",E,E,7,N],[12,R[42],E,E,7,N],[12,"events",E,E,7,N],[3,R[448],E,"Volta hooks for an individual tool",N,N],[12,"distro",E,"The hook for resolving the URL for a distro version",8,N],[12,"latest",E,"The hook for resolving the URL for the latest version",8,N],[12,"index",E,"The hook for resolving the Tool Index URL",8,N],[12,"phantom",E,E,8,N],[3,R[449],E,"Volta hooks related to events.",N,N],[12,R[311],E,"The hook for publishing events, if any.",9,N],[4,"Publish",E,"A hook for publishing Volta events.",N,N],[13,"Url",E,"Reports an event by sending a POST request to a URL.",10,N],[13,"Bin",E,"Reports an event by forking a process and sending the…",10,N],[0,"serial",E,E,N,N],[3,R[450],R[404],E,N,N],[12,"prefix",E,E,11,N],[12,"template",E,E,11,N],[12,"bin",E,E,11,N],[3,R[451],E,E,N,N],[12,"url",E,E,12,N],[12,"bin",E,E,12,N],[3,R[452],E,E,N,N],[12,"node",E,E,13,N],[12,"yarn",E,E,13,N],[12,R[532],E,E,13,N],[12,"events",E,E,13,N],[3,R[453],E,E,N,N],[12,R[311],E,E,14,N],[3,R[454],E,E,N,N],[12,"distro",E,E,15,N],[12,"latest",E,E,15,N],[12,"index",E,E,15,N],[12,"phantom",E,E,15,N],[17,"_IMPL_SERIALIZE_FOR_RawResolveHook",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawResolveHook",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_RawPublishHook",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawPublishHook",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_RawHookConfig",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawHookConfig",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_RawEventHooks",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawEventHooks",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_RawToolHooks",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawToolHooks",E,E,N,N],[11,"into_hook",E,E,11,[[["b"],[T],["p"]],[R[263]]]],[11,"into_distro_hook",E,E,11,[[["path"]],[[R[263],[R[264]]],[R[264]]]]],[11,"into_metadata_hook",E,E,11,[[["path"]],[[R[265]],[R[263],[R[265]]]]]],[11,"into_hook_config",E,E,13,[[["path"]],[[R[263],[R[266]]],[R[266]]]]],[11,"into_tool_hooks",E,E,15,[[["path"]],[[R[267]],[R[263],[R[267]]]]]],[0,"tool",R[268],"Types representing Volta Tool Hooks.",N,N],[3,R[455],R[270],E,N,N],[12,R[269],E,E,16,N],[3,R[272],E,E,N,N],[12,R[269],E,E,17,N],[4,R[456],E,"A hook for resolving the distro URL for a given tool version",N,N],[13,"Prefix",E,E,18,N],[13,"Template",E,E,18,N],[13,"Bin",E,E,18,N],[12,"bin","volta_core::hook::tool::DistroHook",E,18,N],[12,R[271],E,E,18,N],[4,R[457],R[270],"A hook for resolving the URL for metadata about a tool",N,N],[13,"Prefix",E,E,19,N],[13,"Template",E,E,19,N],[13,"Bin",E,E,19,N],[12,"bin","volta_core::hook::tool::MetadataHook",E,19,N],[12,R[271],E,E,19,N],[5,"execute_binary",R[270],"Execute a shell command and return the trimmed stdout from…",N,[[["str"],[R[38]],["path"],[R[7],[R[38]]]],[[R[263],[R[38]]],[R[38]]]]],[7,R[455],E,E,N,N],[7,R[272],E,E,N,N],[17,"ARCH_TEMPLATE",E,E,N,N],[17,"OS_TEMPLATE",E,E,N,N],[17,"VERSION_TEMPLATE",E,E,N,N],[11,R[364],E,"Performs resolution of the distro URL based on the given…",18,[[["str"],["self"],[R[45]]],[[R[263],[R[38]]],[R[38]]]]],[11,R[364],E,"Performs resolution of the metadata URL based on the given…",19,[[["str"],["self"]],[[R[263],[R[38]]],[R[38]]]]],[11,"init",R[268],"Constructs a new `LazyHookConfig`",6,[[],[R[310]]]],[11,"get",E,"Forces the loading of the hook configuration",6,[[["self"]],[[R[266]],[R[263],[R[266]]]]]],[11,"merge",E,R[274],8,[[],["self"]]],[11,"node",E,E,7,[[["self"]],[[R[7],[R[267]]],[R[267]]]]],[11,"yarn",E,E,7,[[["self"]],[[R[7],[R[267]]],[R[267]]]]],[11,R[42],E,E,7,[[["self"]],[[R[7],[R[267]]],[R[267]]]]],[11,"events",E,E,7,[[["self"]],[[R[7],[R[273]]],[R[273]]]]],[11,"current",E,"Returns the current hooks, which are a merge between the…",7,[[],[R[263]]]],[11,R[299],E,"Returns the per-project hooks for the current directory.",7,[[],[[R[263],[R[7]]],[R[7]]]]],[11,"for_dir",E,"Returns the per-project hooks for the specified directory.…",7,[[["path"]],[[R[263],[R[7]]],[R[7]]]]],[11,R[373],E,E,7,[[["path"]],[[R[263],[R[7]]],[R[7]]]]],[11,"for_user",E,"Returns the per-user hooks, loaded from the filesystem.",7,[[],[[R[263],[R[7]]],[R[7]]]]],[11,"merge",E,R[274],7,[[],["self"]]],[11,"merge",E,R[274],9,[[],["self"]]],[0,R[275],R[37],"Provides types for working with Volta's inventory, the…",N,N],[3,R[458],R[276],"Lazily loaded inventory.",N,N],[12,R[275],E,E,20,N],[3,R[459],E,"The inventory of locally available tool versions.",N,N],[12,"node",E,E,21,N],[12,"yarn",E,E,21,N],[12,R[532],E,E,21,N],[5,"versions_matching",E,"Reads the contents of a directory and returns the set of…",N,[[["regex"],["path"]],[[R[263],["btreeset"]],["btreeset",[R[45]]]]]],[0,"node",E,E,N,N],[3,R[460],R[405],E,N,N],[12,R[371],E,E,22,N],[11,"load",E,E,22,[[],[R[263]]]],[0,R[42],R[276],E,N,N],[3,R[461],R[406],E,N,N],[12,"0",E,E,23,N],[11,"load",E,E,23,[[],[R[263]]]],[11,"iter",E,E,23,[[["self"]]]],[0,"yarn",R[276],E,N,N],[3,R[462],R[407],E,N,N],[12,R[371],E,E,24,N],[11,"load",E,E,24,[[],[R[263]]]],[11,"init",R[276],"Constructs a new `LazyInventory`.",20,[[],["lazyinventory"]]],[11,"get",E,"Forces the loading of the inventory and returns an…",20,[[["self"]],[[R[275]],[R[263],[R[275]]]]]],[11,"get_mut",E,"Forces the loading of the inventory and returns a mutable…",20,[[["self"]],[[R[263],[R[275]]],[R[275]]]]],[11,"current",E,"Returns the current inventory.",21,[[],[[R[263],[R[275]]],[R[275]]]]],[0,"layout",R[37],E,N,N],[3,R[281],R[282],E,N,N],[12,R[269],E,E,25,N],[3,R[283],E,E,N,N],[12,R[269],E,E,26,N],[5,R[280],E,E,N,[[],[["vec",[R[279]]],[R[263],["vec"]]]]],[5,"volta_home",E,E,N,[[],[[R[263],[R[277]]],[R[277]]]]],[5,"volta_install",E,E,N,[[],[[R[263],[R[278]]],[R[278]]]]],[5,"bootstrap_volta_dirs",E,E,N,[[],[R[263]]]],[5,"ensure_volta_dirs_exist",E,E,N,[[],[R[263]]]],[0,"unix",E,E,N,N],[5,"default_home_dir","volta_core::layout::unix",E,N,[[],[[R[279]],[R[263],[R[279]]]]]],[5,"default_install_dir",E,E,N,[[],[[R[279]],[R[263],[R[279]]]]]],[5,R[280],E,E,N,[[],[["vec",[R[279]]],[R[263],["vec"]]]]],[7,R[281],R[282],E,N,N],[7,R[283],E,E,N,N],[0,"log",R[37],"This module provides a custom Logger implementation for…",N,N],[3,"Logger",R[408],E,N,N],[12,"context",E,E,27,N],[12,"level",E,E,27,N],[4,R[463],E,"Represents the context from which the logger was created",N,N],[13,"Volta",E,"Log messages from the `volta` executable",28,N],[13,"Shim",E,"Log messages from one of the shims",28,N],[4,R[464],E,"Represents the level of verbosity that was requested by…",N,N],[13,"Quiet",E,E,29,N],[13,R[533],E,E,29,N],[13,"Verbose",E,E,29,N],[5,"wrap_content",E,"Wraps the supplied content to the terminal width, if we…",N,[[["str"],["d"]],[R[38]]]],[5,"level_from_env",E,"Determines the correct logging level based on the…",N,[[],["levelfilter"]]],[17,"ERROR_PREFIX",E,E,N,N],[17,"WARNING_PREFIX",E,E,N,N],[17,"SHIM_ERROR_PREFIX",E,E,N,N],[17,"SHIM_WARNING_PREFIX",E,E,N,N],[17,"VOLTA_LOGLEVEL",E,E,N,N],[17,"ALLOWED_PREFIX",E,E,N,N],[17,"WRAP_INDENT",E,E,N,N],[11,"init",E,"Initialize the global logger with a Logger instance Will…",27,[[[R[285]],[R[286]]],[[R[284]],[R[0],[R[284]]]]]],[11,"new",E,E,27,[[[R[285]],[R[286]]],["self"]]],[11,"log_error",E,E,27,[[["d"],["self"]]]],[11,"log_warning",E,E,27,[[["d"],["self"]]]],[0,R[289],R[37],"Provides the `Manifest` type, which represents a Node…",N,N],[3,R[329],R[290],"A Node manifest file.",N,N],[12,R[291],E,"The platform image specified by the `volta` section.",30,N],[12,R[287],E,"The `dependencies` section.",30,N],[12,R[288],E,"The `devDependencies` section.",30,N],[3,R[465],E,E,N,N],[12,"bin",E,"The `bin` section, containing a map of binary names to…",31,N],[12,"engine",E,"The `engines` section, containing a spec of the Node…",31,N],[0,"serial",E,E,N,N],[3,"BinMap",R[409],E,N,N],[12,"0",E,E,32,N],[3,R[329],E,E,N,N],[12,"name",E,E,33,N],[12,R[45],E,E,33,N],[12,R[370],E,E,33,N],[12,R[287],E,E,33,N],[12,R[288],E,E,33,N],[12,R[309],E,E,33,N],[12,"volta",E,E,33,N],[3,R[466],E,E,N,N],[12,"name",E,E,34,N],[12,"bin",E,E,34,N],[12,"engines",E,E,34,N],[3,R[467],E,E,N,N],[12,"node",E,E,35,N],[12,"npm",E,E,35,N],[12,"yarn",E,E,35,N],[3,"Engines",E,E,N,N],[12,"node",E,E,36,N],[3,R[468],E,E,N,N],[12,"marker",E,E,37,N],[17,R[332],E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawBinManifest",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ToolchainSpec",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ToolchainSpec",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Engines",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Engines",E,E,N,N],[11,R[401],E,"Handle deserialization where users may have supplied bad…",36,[[["d"]],[[R[0],[R[7]]],[R[7],["engines"]]]]],[11,"into_manifest",E,E,33,[[["path"]],[[R[263],[R[289]]],[R[289]]]]],[11,"to_platform",E,E,33,[[["self"],["path"]],[[R[7],[R[292]]],[R[263],[R[7]]]]]],[11,"new",E,E,37,[[],["self"]]],[11,"for_dir",R[290],"Loads and parses a Node manifest for the project rooted at…",30,[[["path"]],[[R[289]],[R[263],[R[289]]]]]],[11,R[291],E,"Returns a reference to the platform image specified by…",30,[[["self"]],[["rc",[R[292]]],[R[7],["rc"]]]]],[11,"merged_dependencies",E,"Gets the names of all the direct dependencies in the…",30,[[["self"]],[["hashset",[R[38]]],[R[38]]]]],[11,"node",E,"Returns the pinned version of Node as a Version, if any.",30,[[["self"]],[[R[45]],[R[7],[R[45]]]]]],[11,"yarn",E,"Returns the pinned verison of Yarn as a Version, if any.",30,[[["self"]],[[R[45]],[R[7],[R[45]]]]]],[11,"update_platform",E,"Updates the pinned platform information",30,[[["self"],[R[292]]]]],[11,"write",E,"Updates the `volta` key in the specified `package.json` to…",30,[[["self"],[R[279]]],[R[263]]]],[11,"for_dir",E,E,31,[[["path"]],[R[263]]]],[0,"monitor",R[37],E,N,N],[3,"Monitor",R[410],E,N,N],[12,"monitor_process",E,E,38,N],[5,"spawn_process",E,E,N,[[["str"]],[[R[7],["child"]],["child"]]]],[11,"new",E,"Returns the current monitor.",38,[[["str"]],["monitor"]]],[11,"send_events",E,"send event to the monitor process",38,[[["self"]]]],[0,R[291],R[37],E,N,N],[3,R[469],R[296],"A specification of tool versions needed for a platform",N,N],[12,"node_runtime",E,R[293],39,N],[12,"npm",E,"The pinned version of npm, if any.",39,N],[12,"yarn",E,R[294],39,N],[3,"Image",E,"A platform image.",N,N],[12,"node",E,R[293],40,N],[12,"yarn",E,R[294],40,N],[3,"System",E,"A lightweight namespace type representing the system…",N,N],[5,"build_path_error",E,E,N,[[["joinpathserror"]],[R[308]]]],[0,"sourced",E,E,N,N],[3,R[470],R[411],E,N,N],[12,R[291],E,E,41,N],[12,"source",E,E,41,N],[3,R[471],E,E,N,N],[12,"image",E,E,42,N],[12,"source",E,E,42,N],[4,"Source",E,E,N,N],[13,R[533],E,"Represents a Platform that came from the user default",43,N],[13,"Project",E,"Represents a Platform that came from a project manifest",43,N],[13,"ProjectNodeDefaultYarn",E,"Represents a Platform that is the result of merging the…",43,N],[11,R[300],E,E,41,[[["rc",[R[292]]],[R[292]]],["self"]]],[11,"default",E,E,41,[[["rc",[R[292]]],[R[292]]],["self"]]],[11,"merged",E,E,41,[[["rc",[R[292]]],[R[292]]],["self"]]],[11,"checkout",E,E,41,[[[R[305]]],[[R[263],[R[295]]],[R[295]]]]],[11,"node",E,E,41,[[["self"]],[R[45]]]],[11,"npm",E,E,41,[[["self"]],[[R[45]],[R[7],[R[45]]]]]],[11,"yarn",E,E,41,[[["self"]],[[R[45]],[R[7],[R[45]]]]]],[11,"source",E,E,41,[[["self"]],["source"]]],[11,"path",E,E,42,[[["self"]],[[R[297]],[R[263],[R[297]]]]]],[11,"node",E,E,42,[[["self"]],[R[301]]]],[11,"yarn",E,E,42,[[["self"]],[[R[45]],[R[7],[R[45]]]]]],[11,"source",E,E,42,[[["self"]],["source"]]],[11,"checkout",R[296],E,39,[[["self"],[R[305]]],[["image"],[R[263],["image"]]]]],[11,"bins",E,E,40,[[["self"]],[["vec",[R[279]]],[R[263],["vec"]]]]],[11,"path",E,R[298],40,[[["self"]],[[R[297]],[R[263],[R[297]]]]]],[11,"path",E,R[298],44,[[],[[R[297]],[R[263],[R[297]]]]]],[11,"enabled_path",E,"Reproduces the Volta-enabled `PATH` environment variable…",44,[[],[[R[297]],[R[263],[R[297]]]]]],[0,R[300],R[37],"Provides the `Project` type, which represents a Node…",N,N],[3,R[472],R[412],"A lazily loaded Project",N,N],[12,R[300],E,E,45,N],[3,"Project",E,"A Node project tree in the filesystem.",N,N],[12,R[289],E,E,46,N],[12,"project_root",E,E,46,N],[5,"is_node_root",E,E,N,[[["path"]],["bool"]]],[5,"is_node_modules",E,E,N,[[["path"]],["bool"]]],[5,"is_dependency",E,E,N,[[["path"]],["bool"]]],[5,"is_project_root",E,E,N,[[["path"]],["bool"]]],[11,"init",E,E,45,[[],["self"]]],[11,"get",E,E,45,[[["self"]],[[R[263],[R[7]]],[R[7],[R[300]]]]]],[11,"get_mut",E,E,45,[[["self"]],[[R[7],[R[300]]],[R[263],[R[7]]]]]],[11,R[299],E,"Returns the Node project containing the current working…",46,[[],[[R[7],[R[300]]],[R[263],[R[7]]]]]],[11,"find_dir",E,"Starts at `base_dir` and walks up the directory tree until…",46,[[["path"]],[["path"],[R[7],["path"]]]]],[11,"for_dir",E,"Returns the Node project for the input directory, if any.",46,[[["path"]],[[R[7],[R[300]]],[R[263],[R[7]]]]]],[11,R[291],E,"Returns the pinned platform image, if any.",46,[[["self"]],[["rc",[R[292]]],[R[7],["rc"]]]]],[11,"is_pinned",E,"Returns true if the project manifest contains a toolchain.",46,[[["self"]],["bool"]]],[11,R[289],E,"Returns the project manifest (`package.json`) for this…",46,[[["self"]],[R[289]]]],[11,"package_file",E,"Returns the path to the `package.json` file for this…",46,[[["self"]],[R[279]]]],[11,"local_bin_dir",E,"Returns the path to the local binary directory for this…",46,[[["self"]],[R[279]]]],[11,"has_direct_bin",E,"Returns true if the input binary name is a direct…",46,[[["osstr"],["self"]],[[R[263],["bool"]],["bool"]]]],[11,"matching_bin",E,"Returns a matching config if the bin exists at the…",46,[[["osstr"],["self"],[R[45]]],[[R[263],[R[7]]],[R[7],[R[304]]]]]],[11,"has_direct_dependency",E,E,46,[[["str"],["self"]],["bool"]]],[11,"has_dependency",E,E,46,[[["str"],["self"],[R[45]]],["bool"]]],[11,"pin_node",E,"Writes the specified version of Node to the `volta.node`…",46,[[["self"],[R[301]]],[R[263]]]],[11,"pin_yarn",E,"Writes the specified version of Yarn to the `volta.yarn`…",46,[[["self"],[R[45]]],[R[263]]]],[11,"pin_npm",E,"Writes the specified version of Npm to the `volta.npm` key…",46,[[["self"],[R[45]]],[R[263]]]],[0,"run",R[37],"Types and helpers for executing command-line tools.",N,N],[3,R[473],R[306],"Represents the command to execute a tool",N,N],[12,R[41],E,"The command that will execute a tool with the right PATH…",47,N],[12,"on_failure",E,"The Volta error with which to wrap any failure.",47,N],[4,R[474],E,"Distinguish global `add` commands in npm or yarn from all…",N,N],[13,"GlobalAdd",E,"The command is a global add command.",48,N],[13,"NotGlobalAdd",E,"The command is a local, i.e. non-global, add command.",48,N],[5,"execute_tool",E,E,N,[[[R[305]]],[[R[263],[R[302]]],[R[302]]]]],[5,"get_tool_name",E,E,N,[[["argsos"]],[[R[297]],[R[263],[R[297]]]]]],[5,"tool_name_from_file_name",E,E,N,[[["osstr"]],[R[297]]]],[5,"command_for",E,E,N,[[["osstr"],["a"]],[R[41]]]],[5,"intercept_global_installs",E,E,N,[[],["bool"]]],[0,"binary",E,E,N,N],[3,R[475],R[413],"Information about the location and execution context of…",N,N],[12,"bin_path",E,E,49,N],[12,R[291],E,E,49,N],[12,"loader",E,E,49,N],[5,R[41],E,E,N,[[["a"],[R[297]],[R[305]]],[[R[303]],[R[263],[R[303]]]]]],[11,"from_config",E,E,49,[[[R[304]],[R[305]]],[R[263]]]],[11,"from_name",E,E,49,[[["osstr"],[R[305]]],[[R[263],[R[7]]],[R[7]]]]],[0,"node",R[306],E,N,N],[5,R[41],"volta_core::run::node",E,N,[[["a"],[R[305]]],[[R[303]],[R[263],[R[303]]]]]],[0,"npm",R[306],E,N,N],[5,R[41],"volta_core::run::npm",E,N,[[["a"],[R[305]]],[[R[303]],[R[263],[R[303]]]]]],[5,"check_npm_install",E,E,N,[[],[R[307]]]],[0,"npx",R[306],E,N,N],[5,R[41],"volta_core::run::npx",E,N,[[["a"],[R[305]]],[[R[303]],[R[263],[R[303]]]]]],[0,"yarn",R[306],E,N,N],[5,R[41],"volta_core::run::yarn",E,N,[[["a"],[R[305]]],[[R[303]],[R[263],[R[303]]]]]],[5,"get_yarn_platform",E,"Determine the correct platform (project or user) and check…",N,[[[R[305]]],[[R[263],[R[7]]],[R[7],[R[312]]]]]],[5,"check_yarn_add",E,E,N,[[],[R[307]]]],[17,"VOLTA_BYPASS",R[306],E,N,N],[11,"direct",E,"Build a ToolCommand that is directly calling a tool in the…",47,[[["osstr"],["a"]],["self"]]],[11,"project_local",E,"Build a ToolCommand that is calling a binary in the…",47,[[["osstr"],["a"]],["self"]]],[11,"passthrough",E,"Build a ToolCommand that is calling a command that Volta…",47,[[["osstr"],["a"],[R[308]]],[R[263]]]],[11,"current_dir",E,E,47,[[["path"],["self"],["asref",["path"]]],[R[303]]]],[11,"status",E,E,47,[[],[[R[263],[R[302]]],[R[302]]]]],[11,"output",E,E,47,[[],[[R[263],["output"]],["output"]]]],[0,R[305],R[37],"Provides the `Session` type, which represents the user's…",N,N],[3,"Session",R[414],"Represents the user's state during an execution of a Volta…",N,N],[12,"hooks",E,E,50,N],[12,R[275],E,E,50,N],[12,R[309],E,E,50,N],[12,R[300],E,E,50,N],[12,"event_log",E,E,50,N],[4,R[476],E,E,N,N],[13,"Fetch",E,E,51,N],[13,"Install",E,E,51,N],[13,R[513],E,E,51,N],[13,"List",E,E,51,N],[13,"Current",E,E,51,N],[13,R[317],E,E,51,N],[13,R[529],E,E,51,N],[13,R[533],E,E,51,N],[13,"Pin",E,E,51,N],[13,"Node",E,E,51,N],[13,"Npm",E,E,51,N],[13,"Npx",E,E,51,N],[13,"Yarn",E,E,51,N],[13,"Volta",E,E,51,N],[13,"Tool",E,E,51,N],[13,"Help",E,E,51,N],[13,"Version",E,E,51,N],[13,"Binary",E,E,51,N],[13,"Shim",E,E,51,N],[13,R[514],E,E,51,N],[13,"Which",E,E,51,N],[5,"publish_plugin",E,E,N,[[[R[310]]],[[R[7],[R[311]]],[R[263],[R[7]]]]]],[11,"init",E,"Constructs a new `Session`.",50,[[],[R[305]]]],[11,R[300],E,"Produces a reference to the current Node project, if any.",50,[[["self"]],[[R[263],[R[7]]],[R[7],[R[300]]]]]],[11,"project_mut",E,"Produces a mutable reference to the current Node project,…",50,[[["self"]],[[R[7],[R[300]]],[R[263],[R[7]]]]]],[11,"current_platform",E,"Returns the user's currently active platform, if any",50,[[["self"]],[[R[263],[R[7]]],[R[7],[R[312]]]]]],[11,"user_platform",E,"Returns the user's default platform, if any",50,[[["self"]],[[R[263],[R[7]]],[R[7],["rc"]]]]],[11,"project_platform",E,"Returns the current project's pinned platform image, if any.",50,[[["self"]],[[R[263],[R[7]]],[R[7],["rc"]]]]],[11,R[275],E,"Produces a reference to the current inventory.",50,[[["self"]],[[R[275]],[R[263],[R[275]]]]]],[11,"inventory_mut",E,"Produces a mutable reference to the current inventory.",50,[[["self"]],[[R[263],[R[275]]],[R[275]]]]],[11,R[309],E,"Produces a reference to the current toolchain (default…",50,[[["self"]],[[R[263],[R[309]]],[R[309]]]]],[11,"toolchain_mut",E,"Produces a mutable reference to the current toolchain",50,[[["self"]],[[R[263],[R[309]]],[R[309]]]]],[11,"hooks",E,"Produces a reference to the hook configuration",50,[[["self"]],[[R[266]],[R[263],[R[266]]]]]],[11,"ensure_node",E,"Ensures that a specific Node version has been fetched and…",50,[[["self"],[R[45]]],[R[263]]]],[11,"ensure_yarn",E,"Ensures that a specific Yarn version has been fetched and…",50,[[["self"],[R[45]]],[R[263]]]],[11,R[313],E,E,50,[[[R[261]],["self"]]]],[11,R[314],E,E,50,[[[R[261]],["self"],[R[9]]]]],[11,R[315],E,E,50,[[[R[261]],["self"],["i32"]]]],[11,R[316],E,E,50,[[[R[261]],["self"],[R[4]]]]],[11,"publish_to_event_log",E,E,50,[[]]],[11,"exit",E,E,50,[[[R[9]]]]],[11,"exit_tool",E,E,50,[[["i32"]]]],[0,"shell",R[37],E,N,N],[3,R[477],R[318],E,N,N],[12,"0",E,E,52,N],[4,R[478],E,E,N,N],[13,R[529],E,E,53,N],[13,R[317],E,E,53,N],[13,"ToolVersion",E,E,53,N],[12,"tool","volta_core::shell::Postscript",E,53,N],[12,R[45],E,E,53,N],[0,"bash",R[318],E,N,N],[3,"Bash",R[416],E,N,N],[12,R[319],E,E,54,N],[0,"fish",R[318],E,N,N],[3,"Fish",R[417],E,N,N],[12,R[319],E,E,55,N],[7,"STATUS_HANDLING",E,E,N,N],[7,"SET_VOLTA_HOME",E,E,N,N],[7,"UNSET_VOLTA_HOME",E,E,N,N],[8,"Shell",R[318],E,N,N],[10,R[319],E,E,56,[[["self"]],["path"]]],[10,R[428],E,E,56,[[[R[320]],["self"]],[R[38]]]],[11,"save_postscript",E,E,56,[[[R[320]],["self"]],[R[263]]]],[11,"detect",E,E,52,[[],[R[263]]]],[0,"shim",R[37],"Provides utilities for modifying shims for 3rd-party…",N,N],[4,R[479],R[418],E,N,N],[13,"Created",E,E,57,N],[13,"AlreadyExists",E,E,57,N],[13,"Deleted",E,E,57,N],[13,"DoesntExist",E,E,57,N],[5,"is_3p_shim",E,E,N,[[["str"]],["bool"]]],[5,"create",E,E,N,[[["str"]],[[R[263],[R[321]]],[R[321]]]]],[5,"delete",E,E,N,[[["str"]],[[R[263],[R[321]]],[R[321]]]]],[0,"signal",R[37],E,N,N],[5,"pass_control_to_shim","volta_core::signal",E,N,[[]]],[5,"setup_signal_handler",E,E,N,[[]]],[7,"SHIM_HAS_CONTROL",E,E,N,N],[17,"INTERRUPTED_EXIT_CODE",E,E,N,N],[0,"style",R[37],"The view layer of Volta, with utilities for styling…",N,N],[5,"success_prefix","volta_core::style","Generate the styled prefix for a success message",N,[[],[["str"],["styledobject",["str"]]]]],[5,"format_error_cause",E,"Format the underlying cause of an error",N,[[["fail"]],[R[38]]]],[5,"action_str",E,"Determines the string to display based on the Origin of…",N,[[[R[25]]],["str"]]],[5,"tool_version",E,E,N,[[["v"],["n"]],[R[38]]]],[5,"text_width",E,"Get the width of the terminal, limited to a maximum of…",N,[[],[[R[7],["usize"]],["usize"]]]],[5,"progress_bar",E,"Constructs a command-line progress bar based on the…",N,[[["str"],[R[25]],["u64"]],[R[322]]]],[5,"progress_spinner",E,"Constructs a command-line progress spinner with the…",N,[[["str"]],[R[322]]]],[17,"MAX_WIDTH",E,E,N,N],[17,"MAX_PROGRESS_WIDTH",E,E,N,N],[0,"tool",R[37],E,N,N],[3,"Node",R[335],R[328],N,N],[12,R[45],E,E,58,N],[3,R[324],E,R[325],N,N],[12,"runtime",E,R[326],59,N],[12,"npm",E,R[327],59,N],[3,"Npm",E,R[336],N,N],[12,R[45],E,E,60,N],[3,R[352],E,R[353],N,N],[12,"name",E,R[354],61,N],[12,R[42],E,R[355],61,N],[12,R[45],E,R[323],61,N],[12,"path",E,R[356],61,N],[12,R[291],E,R[357],61,N],[12,"loader",E,R[358],61,N],[3,R[359],E,R[360],N,N],[12,R[41],E,R[361],62,N],[12,"args",E,R[362],62,N],[3,R[534],E,R[340],N,N],[12,"name",E,E,63,N],[12,"details",E,E,63,N],[3,R[347],E,R[348],N,N],[12,"name",E,R[349],64,N],[12,R[45],E,R[323],64,N],[12,R[291],E,R[350],64,N],[12,"bins",E,R[351],64,N],[3,R[337],E,R[338],N,N],[12,R[45],E,E,65,N],[12,R[339],E,E,65,N],[12,"shasum",E,E,65,N],[3,"Yarn",E,R[380],N,N],[12,R[45],E,E,66,N],[4,"Spec",E,"Specification for a tool and its associated version.",N,N],[13,"Node",E,E,67,N],[13,"Npm",E,E,67,N],[13,"Yarn",E,E,67,N],[13,R[534],E,E,67,N],[4,"Resolved",E,"A fully resolved Tool, with all information necessary for…",N,N],[13,"Node",E,E,68,N],[13,"Npm",E,E,68,N],[13,"Yarn",E,E,68,N],[13,R[534],E,E,68,N],[5,R[330],E,R[331],N,[[[R[45]]],[[R[45]],[R[263],[R[45]]]]]],[5,R[341],E,E,N,[[["str"],[R[45]],["p"]],[[R[279]],[R[263],[R[279]]]]]],[5,"debug_already_fetched",E,E,N,[[["display"],["sized"]]]],[5,"info_installed",E,E,N,[[["display"],["sized"]]]],[5,"info_fetched",E,E,N,[[["display"],["sized"]]]],[5,"info_pinned",E,E,N,[[["display"],["sized"]]]],[5,"download_tool_error",E,E,N,[[["spec"]]]],[5,"registry_fetch_error",E,E,N,[[]]],[0,"node",E,E,N,N],[3,R[324],R[333],R[325],N,N],[12,"runtime",E,R[326],59,N],[12,"npm",E,R[327],59,N],[3,"Node",E,R[328],N,N],[12,R[45],E,E,58,N],[0,"fetch",E,"Provides fetcher for Node distributions",N,N],[3,R[329],R[419],"The portion of npm's `package.json` file that we care about",N,N],[12,R[45],E,E,69,N],[5,"public_node_server_root",E,E,N,[[],[R[38]]]],[5,"npm_manifest_path",E,E,N,[[["str"]],[R[279]]]],[5,"fetch",E,E,N,[[[R[7],[R[267]]],[R[45]],[R[267]]],[[R[301]],[R[263],[R[301]]]]]],[5,R[345],E,"Unpack the node archive into the image directory so that…",N,[[["box",[R[20]]],[R[45]],[R[20]]],[[R[301]],[R[263],[R[301]]]]]],[5,R[342],E,R[381],N,[[["path"]],[["box",[R[20]]],[R[7],["box"]]]]],[5,R[382],E,R[383],N,[[[R[7],[R[267]]],[R[45]],[R[267]]],[[R[263],[R[38]]],[R[38]]]]],[5,R[343],E,R[384],N,[[["str"],[R[45]],["path"]],[["box",[R[20]]],[R[263],["box"]]]]],[5,R[330],E,R[331],N,[[[R[45]]],[[R[45]],[R[263],[R[45]]]]]],[5,"save_default_npm_version",E,"Save the default npm version to the filesystem for a given…",N,[[[R[45]]],[R[263]]]],[17,R[332],E,E,N,N],[11,R[45],E,"Parse the version out of a package.json file",69,[[["path"]],[[R[45]],[R[263],[R[45]]]]]],[0,R[364],R[333],"Provides resolution of Node requirements into specific…",N,N],[3,R[480],R[420],"The index of the public Node server.",N,N],[12,"entries",E,E,70,N],[3,R[481],E,E,N,N],[12,R[45],E,E,71,N],[12,"npm",E,E,71,N],[12,"files",E,E,71,N],[12,"lts",E,E,71,N],[3,R[482],E,"The set of available files on the public Node server for a…",N,N],[12,"files",E,E,72,N],[5,"public_node_version_index",E,"Returns the URL of the index of available Node versions on…",N,[[],[R[38]]]],[5,R[364],E,E,N,[[[R[305]],[R[363]]],[[R[45]],[R[263],[R[45]]]]]],[5,R[365],E,E,N,[[[R[7],[R[267]]],[R[267]]],[[R[45]],[R[263],[R[45]]]]]],[5,"resolve_lts",E,E,N,[[[R[7],[R[267]]],[R[267]]],[[R[45]],[R[263],[R[45]]]]]],[5,R[366],E,E,N,[[[R[367]],[R[7],[R[267]]],[R[267]]],[[R[45]],[R[263],[R[45]]]]]],[5,"match_node_version",E,E,N,[[["str"]],[[R[263],[R[7]]],[R[7],[R[45]]]]]],[5,"read_cached_opt",E,"Reads a public index from the Node cache, if it exists and…",N,[[],[[R[263],[R[7]]],[R[7],[R[334]]]]]],[5,"max_age",E,"Get the cache max-age of an HTTP reponse.",N,[[[R[23]]],["u32"]]],[5,"resolve_node_versions",E,E,N,[[["str"]],[[R[263],[R[334]]],[R[334]]]]],[0,"serial",R[333],E,N,N],[3,R[483],R[421],E,N,N],[12,"0",E,E,73,N],[3,R[484],E,E,N,N],[12,R[45],E,E,74,N],[12,"npm",E,E,74,N],[12,"files",E,E,74,N],[12,"lts",E,E,74,N],[5,"lts_version_serde",E,E,N,[[["d"]],[[R[0],["bool"]],["bool"]]]],[17,"_IMPL_DESERIALIZE_FOR_RawNodeIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawNodeEntry",E,E,N,N],[17,R[392],R[333],R[393],N,N],[17,R[388],E,R[389],N,N],[17,R[390],E,R[391],N,N],[11,"new",R[335],E,58,[[[R[45]]],["self"]]],[11,R[386],E,E,58,[[["str"]],[R[38]]]],[11,R[387],E,E,58,[[["str"]],[R[38]]]],[11,R[377],E,E,58,[[["self"],[R[305]]],[[R[301]],[R[263],[R[301]]]]]],[0,"npm",E,E,N,N],[3,"Npm","volta_core::tool::npm",R[336],N,N],[12,R[45],E,E,60,N],[11,"new",R[335],E,60,[[[R[45]]],["self"]]],[0,R[42],E,E,N,N],[3,R[337],R[346],R[338],N,N],[12,R[45],E,E,65,N],[12,R[339],E,E,65,N],[12,"shasum",E,E,65,N],[3,R[534],E,R[340],N,N],[12,"name",E,E,63,N],[12,"details",E,E,63,N],[5,R[341],E,E,N,[[["str"],[R[45]],["p"]],[[R[279]],[R[263],[R[279]]]]]],[5,R[394],E,"Uninstall the specified package.",N,[[["str"]],[R[263]]]],[5,"remove_config_and_shim",E,E,N,[[["str"]],[R[263]]]],[5,"binaries_from_package",E,"Reads the contents of a directory and returns a Vec…",N,[[["str"]],[["vec",[R[38]]],[R[263],["vec"]]]]],[0,"fetch",E,"Provides fetcher for 3rd-party packages",N,N],[5,"fetch","volta_core::tool::package::fetch",E,N,[[["str"],[R[305]],[R[344]]],[R[263]]]],[5,R[342],E,E,N,[[["path"]],[["box",[R[20]]],[R[7],["box"]]]]],[5,R[343],E,E,N,[[["str"],["path"],[R[305]],[R[344]]],[["box",[R[20]]],[R[263],["box"]]]]],[5,"npm_pack_command_for",E,E,N,[[["str"],["path"],[R[305]]],[[R[303]],[R[263],[R[303]]]]]],[5,R[345],E,E,N,[[["str"],[R[45]],["box",[R[20]]],[R[20]]],[R[263]]]],[5,"find_unpack_dir",E,"Figure out the unpacked package directory name dynamically",N,[[["path"]],[[R[279]],[R[263],[R[279]]]]]],[0,R[429],R[346],"Provides installation steps for 3rd-party packages,…",N,N],[3,R[347],"volta_core::tool::package::install",R[348],N,N],[12,"name",E,R[349],64,N],[12,R[45],E,R[323],64,N],[12,R[291],E,R[350],64,N],[12,"bins",E,R[351],64,N],[3,R[352],E,R[353],N,N],[12,"name",E,R[354],61,N],[12,R[42],E,R[355],61,N],[12,R[45],E,R[323],61,N],[12,"path",E,R[356],61,N],[12,R[291],E,R[357],61,N],[12,"loader",E,R[358],61,N],[3,R[359],E,R[360],N,N],[12,R[41],E,R[361],62,N],[12,"args",E,R[362],62,N],[5,R[429],E,E,N,[[["str"],[R[45]],[R[305]]],[[R[263],[R[441]]],[R[441],[R[38],R[38]]]]]],[5,"determine_engine",E,E,N,[[["str"],["path"]],[[R[263],[R[363]]],[R[363]]]]],[5,"write_configs",E,E,N,[[["str"],[R[45]],[R[441]],[R[292]]],[R[263]]]],[5,"install_dependencies",E,E,N,[[["image"],["str"],["path"]],[R[263]]]],[5,"build_install_command",E,E,N,[[["osstr"],["path"]],[R[41]]]],[5,"read_bins",E,"Read a fetched package and generate a map of all the bins…",N,[[["str"],[R[45]]],[[R[263],[R[441]]],[R[441],[R[38],R[38]]]]]],[0,"os",E,E,N,N],[5,"set_executable_permissions","volta_core::tool::package::install::os","Ensure that a given binary has 'executable' permissions on…",N,[[["path"]],[R[0]]]],[5,"determine_script_loader",E,"On Unix, shebang loaders work correctly, so we don't need…",N,[[["str"],["path"]],[[R[263],[R[7]]],[R[7],[R[430]]]]]],[0,R[364],R[346],"Provides resolution of 3rd-party packages into specific…",N,N],[3,R[485],R[422],"Index of versions of a specific package.",N,N],[12,"latest",E,E,75,N],[12,"entries",E,E,75,N],[5,R[364],E,E,N,[[["str"],[R[305]],[R[363]]],[[R[263],[R[344]]],[R[344]]]]],[5,R[365],E,E,N,[[["str"],[R[305]]],[[R[263],[R[344]]],[R[344]]]]],[5,R[366],E,E,N,[[["str"],[R[367]],[R[305]]],[[R[263],[R[344]]],[R[344]]]]],[5,"npm_view_query",E,"Use `npm view` to get the info for the package. This…",N,[[["str"],[R[305]]],[[R[263],[R[368]]],[R[368]]]]],[5,"npm_view_command_for",E,E,N,[[["str"],[R[305]]],[[R[303]],[R[263],[R[303]]]]]],[5,"resolve_package_metadata",E,E,N,[[["str"]],[[R[369]],[R[263],[R[369]]]]]],[0,"serial",R[346],E,N,N],[3,R[486],R[375],"Package Metadata Response",N,N],[12,"name",E,E,76,N],[12,R[370],E,E,76,N],[12,R[371],E,E,76,N],[12,R[372],E,E,76,N],[3,R[487],E,E,N,N],[12,R[45],E,E,77,N],[12,"dist",E,E,77,N],[3,R[488],E,E,N,N],[12,"latest",E,E,78,N],[12,"beta",E,E,78,N],[3,R[489],E,E,N,N],[12,"shasum",E,E,79,N],[12,"tarball",E,E,79,N],[3,R[490],E,E,N,N],[12,"name",E,E,80,N],[12,R[45],E,E,80,N],[12,"dist",E,E,80,N],[12,R[372],E,E,80,N],[3,R[491],E,E,N,N],[12,"name",E,E,81,N],[12,R[45],E,E,81,N],[12,R[291],E,E,81,N],[12,"bins",E,E,81,N],[3,R[492],E,E,N,N],[12,"name",E,E,82,N],[12,R[42],E,E,82,N],[12,R[45],E,E,82,N],[12,"path",E,E,82,N],[12,R[291],E,E,82,N],[12,"loader",E,E,82,N],[3,R[493],E,E,N,N],[12,R[41],E,E,83,N],[12,"args",E,E,83,N],[17,"_IMPL_DESERIALIZE_FOR_RawPackageMetadata",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawPackageVersionInfo",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawPackageDistTags",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawDistInfo",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_NpmViewData",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_RawPackageConfig",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawPackageConfig",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_RawBinConfig",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawBinConfig",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_RawBinLoader",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawBinLoader",E,E,N,N],[11,R[374],E,E,81,[[],[[R[263],[R[38]]],[R[38]]]]],[11,R[376],E,E,81,[[[R[38]]],[R[263]]]],[11,"write",E,E,81,[[],[R[263]]]],[11,R[373],R[335],E,64,[[["path"]],[R[263]]]],[11,R[374],R[375],E,82,[[],[[R[263],[R[38]]],[R[38]]]]],[11,R[376],E,E,82,[[[R[38]]],[R[263]]]],[11,"write",E,"Write the config to disk",82,[[],[R[263]]]],[11,R[373],R[335],E,61,[[[R[279]]],[R[263]]]],[11,"new",E,E,63,[[[R[38]],[R[344]]],["self"]]],[11,R[377],E,E,63,[[["self"],[R[305]]],[R[263]]]],[11,"is_installed",E,E,63,[[["self"]],["bool"]]],[0,"serial",E,E,N,N],[3,R[378],R[423],E,N,N],[12,R[269],E,E,84,N],[3,R[379],E,E,N,N],[12,R[269],E,E,85,N],[7,R[378],E,E,N,N],[7,R[379],E,E,N,N],[11,"from_str_and_version",R[335],E,67,[[["str"],[R[363]]],["self"]]],[11,"try_from_str",E,"Try to parse a tool and version from a string like `[@].",67,[[["str"]],[R[263]]]],[11,"from_strings",E,"Get a valid, sorted `Vec<Spec>` given a `Vec<String>`.",67,[[["str"]],[[R[263],["vec"]],["vec",["spec"]]]]],[11,"check_args",E,"Check the args for the bad pattern of `volta install…",67,[[["str"]],[R[263]]]],[11,"sort_comparator",E,"Compare `Spec`s for sorting when converting from strings",67,[[["spec"]],[R[435]]]],[0,"yarn",E,E,N,N],[3,"Yarn",R[385],R[380],N,N],[12,R[45],E,E,66,N],[0,"fetch",E,"Provides fetcher for Yarn distributions",N,N],[5,"public_yarn_server_root","volta_core::tool::yarn::fetch",E,N,[[],[R[38]]]],[5,"fetch",E,E,N,[[[R[7],[R[267]]],[R[267]],[R[45]]],[R[263]]]],[5,R[345],E,"Unpack the yarn archive into the image directory so that…",N,[[["box",[R[20]]],[R[45]],[R[20]]],[R[263]]]],[5,R[342],E,R[381],N,[[[R[279]]],[["box",[R[20]]],[R[7],["box"]]]]],[5,R[382],E,R[383],N,[[[R[7],[R[267]]],[R[267]],[R[45]]],[[R[263],[R[38]]],[R[38]]]]],[5,R[343],E,R[384],N,[[["str"],[R[45]],["path"]],[["box",[R[20]]],[R[263],["box"]]]]],[0,R[364],R[385],"Provides resolution of Yarn requirements into specific…",N,N],[3,R[494],R[424],"The public Yarn index.",N,N],[12,"entries",E,E,86,N],[5,"public_yarn_version_index",E,"Return the URL of the index of available Yarn versions on…",N,[[],[R[38]]]],[5,"public_yarn_latest_version",E,"URL of the latest Yarn version on the public yarnpkg.com",N,[[],[R[38]]]],[5,R[364],E,E,N,[[[R[305]],[R[363]]],[[R[45]],[R[263],[R[45]]]]]],[5,R[365],E,E,N,[[[R[7],[R[267]]],[R[267]]],[[R[45]],[R[263],[R[45]]]]]],[5,R[366],E,E,N,[[[R[7],[R[267]]],[R[367]],[R[267]]],[[R[45]],[R[263],[R[45]]]]]],[0,"serial",R[385],E,N,N],[3,R[495],R[425],E,N,N],[12,"0",E,E,87,N],[3,R[496],E,E,N,N],[12,"tag_name",E,"Yarn releases are given a tag name of the form \"v$version\"…",88,N],[12,"assets",E,"The GitHub API provides a list of assets. Some Yarn…",88,N],[3,R[497],E,E,N,N],[12,"name",E,"The filename of an asset included in a Yarn GitHub release.",89,N],[17,"_IMPL_DESERIALIZE_FOR_RawYarnIndex",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawYarnEntry",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_RawYarnAsset",E,E,N,N],[11,"is_full_release",E,"Is this entry a full release, i.e., does this entry's…",88,[[["self"]],["bool"]]],[11,"new",R[335],E,66,[[[R[45]]],["self"]]],[11,R[386],E,E,66,[[["str"]],[R[38]]]],[11,R[387],E,E,66,[[["str"]],[R[38]]]],[11,R[377],E,E,66,[[["self"],[R[305]]],[R[263]]]],[17,R[388],E,R[389],N,N],[17,R[390],E,R[391],N,N],[17,R[392],E,R[393],N,N],[8,"Tool",E,"Trait representing all of the actions that can be taken…",N,N],[10,"fetch",E,R[395],90,[[[R[305]]],[R[263]]]],[10,R[429],E,R[396],90,[[[R[305]]],[R[263]]]],[10,"pin",E,R[397],90,[[[R[305]]],[R[263]]]],[11,R[364],E,"Resolve a tool spec into a fully realized Tool that can be…",67,[[[R[305]]],[["resolved"],[R[263],["resolved"]]]]],[11,R[394],E,"Uninstall a tool, removing it from the local inventory",67,[[],[R[263]]]],[11,"fetch",E,R[395],68,[[[R[305]]],[R[263]]]],[11,R[429],E,R[396],68,[[[R[305]]],[R[263]]]],[11,"pin",E,R[397],68,[[[R[305]]],[R[263]]]],[0,R[309],R[37],E,N,N],[3,R[498],R[398],"Lazily loaded toolchain",N,N],[12,R[309],E,E,91,N],[3,R[499],E,E,N,N],[12,R[291],E,E,92,N],[0,"serial",E,E,N,N],[3,R[324],R[426],E,N,N],[12,"runtime",E,E,93,N],[12,"npm",E,E,93,N],[3,"Platform",E,E,N,N],[12,"node",E,E,94,N],[12,"yarn",E,E,94,N],[17,"_IMPL_SERIALIZE_FOR_NodeVersion",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_NodeVersion",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Platform",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Platform",E,E,N,N],[11,"into_platform",E,E,94,[[],[[R[7],[R[292]]],[R[263],[R[7]]]]]],[11,R[376],E,"Deserialize the input JSON String into a Platform",94,[[[R[38]]],[R[263]]]],[11,R[374],E,"Serialize the Platform to a JSON String",94,[[],[[R[263],[R[38]]],[R[38]]]]],[11,"to_serial",R[296],E,39,[[["self"]],[R[291]]]],[11,"init",R[398],"Creates a new `LazyToolchain`",91,[[],["self"]]],[11,"get",E,"Forces loading of the toolchain and returns an immutable…",91,[[["self"]],[[R[263],[R[309]]],[R[309]]]]],[11,"get_mut",E,"Forces loading of the toolchain and returns a mutable…",91,[[["self"]],[[R[263],[R[309]]],[R[309]]]]],[11,"current",E,E,92,[[],[[R[309]],[R[263],[R[309]]]]]],[11,"platform_ref",E,E,92,[[["self"]],[[R[7],[R[292]]],[R[292]]]]],[11,"set_active_node",E,"Set the active Node version in the user platform file.",92,[[["self"],[R[301]]],[R[263]]]],[11,"set_active_yarn",E,"Set the active Yarn version in the user platform file.",92,[[["self"],[R[45]]],[R[263]]]],[11,"set_active_npm",E,"Set the active Npm version in the user platform file.",92,[[["self"],[R[45]]],[R[263]]]],[11,"save",E,E,92,[[["self"]],[R[263]]]],[0,R[45],R[37],E,N,N],[4,R[500],R[400],E,N,N],[13,"Latest",E,E,95,N],[13,"Lts",E,E,95,N],[13,"Semver",E,E,95,N],[13,"Exact",E,E,95,N],[5,"version_parse_error",E,E,N,[[["s"]]]],[5,"trim_version",E,E,N,[[["str"]],["str"]]],[0,"serial",E,E,N,N],[5,R[403],"volta_core::version::serial",E,N,[[["str"]],[[R[367]],[R[0],[R[367],R[399]]],[R[399]]]]],[0,"version_serde",R[400],E,N,N],[3,R[501],R[427],E,N,N],[5,R[402],E,E,N,[[["s"],[R[45]]],[R[0]]]],[5,R[401],E,E,N,[[["d"]],[[R[45]],[R[0],[R[45]]]]]],[0,"option_version_serde",R[400],E,N,N],[5,R[402],"volta_core::version::option_version_serde",E,N,[[["s"],[R[7]]],[R[0]]]],[5,R[401],E,E,N,[[["d"]],[[R[7],[R[45]]],[R[0],[R[7]]]]]],[11,"exact",R[400],E,95,[[[R[45]]],["self"]]],[11,"parse",E,E,95,[[],[R[263]]]],[11,R[403],E,E,95,[[],[[R[367]],[R[263],[R[367]]]]]],[11,"parse_version",E,E,95,[[],[[R[45]],[R[263],[R[45]]]]]],[11,"into",R[39],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[27],E,E,0,[[["self"]],[R[38]]]],[11,R[10],E,E,0,[[[U]],[R[0]]]],[11,R[11],E,E,0,[[],[R[0]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[R[29]]]],[11,R[11],E,E,0,[[],[R[0]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[27],E,E,1,[[["self"]],[R[38]]]],[11,R[10],E,E,1,[[[U]],[R[0]]]],[11,R[11],E,E,1,[[],[R[0]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[R[29]]]],[11,R[30],E,E,1,[[["self"]],["fail"]]],[11,R[3],E,E,1,[[["f"]],[R[4]]]],[11,R[11],E,E,1,[[],[R[0]]]],[11,"into",R[259],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[10],E,E,2,[[[U]],[R[0]]]],[11,R[11],E,E,2,[[],[R[0]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[R[29]]]],[11,R[11],E,E,2,[[],[R[0]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[10],E,E,3,[[[U]],[R[0]]]],[11,R[11],E,E,3,[[],[R[0]]]],[11,R[28],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[R[29]]]],[11,R[11],E,E,3,[[],[R[0]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[10],E,E,4,[[[U]],[R[0]]]],[11,R[11],E,E,4,[[],[R[0]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[R[29]]]],[11,R[11],E,E,4,[[],[R[0]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[10],E,E,5,[[[U]],[R[0]]]],[11,R[11],E,E,5,[[],[R[0]]]],[11,R[28],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[R[29]]]],[11,R[11],E,E,5,[[],[R[0]]]],[11,"into",R[268],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[10],E,E,6,[[[U]],[R[0]]]],[11,R[11],E,E,6,[[],[R[0]]]],[11,R[28],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[R[29]]]],[11,R[11],E,E,6,[[],[R[0]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[10],E,E,7,[[[U]],[R[0]]]],[11,R[11],E,E,7,[[],[R[0]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[R[29]]]],[11,R[11],E,E,7,[[],[R[0]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[10],E,E,8,[[[U]],[R[0]]]],[11,R[11],E,E,8,[[],[R[0]]]],[11,R[28],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[R[29]]]],[11,R[11],E,E,8,[[],[R[0]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[10],E,E,9,[[[U]],[R[0]]]],[11,R[11],E,E,9,[[],[R[0]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[R[29]]]],[11,R[11],E,E,9,[[],[R[0]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[10],E,E,10,[[[U]],[R[0]]]],[11,R[11],E,E,10,[[],[R[0]]]],[11,R[28],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[R[29]]]],[11,R[11],E,E,10,[[],[R[0]]]],[11,"into",R[404],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[10],E,E,11,[[[U]],[R[0]]]],[11,R[11],E,E,11,[[],[R[0]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[R[29]]]],[11,R[11],E,E,11,[[],[R[0]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[10],E,E,12,[[[U]],[R[0]]]],[11,R[11],E,E,12,[[],[R[0]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[R[29]]]],[11,R[11],E,E,12,[[],[R[0]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[10],E,E,13,[[[U]],[R[0]]]],[11,R[11],E,E,13,[[],[R[0]]]],[11,R[28],E,E,13,[[["self"]],[T]]],[11,R[12],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[R[29]]]],[11,R[11],E,E,13,[[],[R[0]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[10],E,E,14,[[[U]],[R[0]]]],[11,R[11],E,E,14,[[],[R[0]]]],[11,R[28],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[R[29]]]],[11,R[11],E,E,14,[[],[R[0]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[10],E,E,15,[[[U]],[R[0]]]],[11,R[11],E,E,15,[[],[R[0]]]],[11,R[28],E,E,15,[[["self"]],[T]]],[11,R[12],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[R[29]]]],[11,R[11],E,E,15,[[],[R[0]]]],[11,"into",R[270],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[10],E,E,16,[[[U]],[R[0]]]],[11,R[11],E,E,16,[[],[R[0]]]],[11,R[28],E,E,16,[[["self"]],[T]]],[11,R[12],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[R[29]]]],[11,R[11],E,E,16,[[],[R[0]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[10],E,E,17,[[[U]],[R[0]]]],[11,R[11],E,E,17,[[],[R[0]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[12],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[R[29]]]],[11,R[11],E,E,17,[[],[R[0]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[10],E,E,18,[[[U]],[R[0]]]],[11,R[11],E,E,18,[[],[R[0]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[12],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[R[29]]]],[11,R[11],E,E,18,[[],[R[0]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[10],E,E,19,[[[U]],[R[0]]]],[11,R[11],E,E,19,[[],[R[0]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[12],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[R[29]]]],[11,R[11],E,E,19,[[],[R[0]]]],[11,"into",R[276],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[10],E,E,20,[[[U]],[R[0]]]],[11,R[11],E,E,20,[[],[R[0]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[12],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[R[29]]]],[11,R[11],E,E,20,[[],[R[0]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[10],E,E,21,[[[U]],[R[0]]]],[11,R[11],E,E,21,[[],[R[0]]]],[11,R[28],E,E,21,[[["self"]],[T]]],[11,R[12],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[R[29]]]],[11,R[11],E,E,21,[[],[R[0]]]],[11,"into",R[405],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[10],E,E,22,[[[U]],[R[0]]]],[11,R[11],E,E,22,[[],[R[0]]]],[11,R[28],E,E,22,[[["self"]],[T]]],[11,R[12],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[R[29]]]],[11,R[11],E,E,22,[[],[R[0]]]],[11,"into",R[406],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[35],E,E,23,[[["self"]],[T]]],[11,R[36],E,E,23,[[["self"],[T]]]],[11,R[10],E,E,23,[[[U]],[R[0]]]],[11,R[11],E,E,23,[[],[R[0]]]],[11,R[28],E,E,23,[[["self"]],[T]]],[11,R[12],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[R[29]]]],[11,R[11],E,E,23,[[],[R[0]]]],[11,"into",R[407],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[10],E,E,24,[[[U]],[R[0]]]],[11,R[11],E,E,24,[[],[R[0]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[12],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[R[29]]]],[11,R[11],E,E,24,[[],[R[0]]]],[11,"into",R[282],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[10],E,E,25,[[[U]],[R[0]]]],[11,R[11],E,E,25,[[],[R[0]]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[12],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[R[29]]]],[11,R[11],E,E,25,[[],[R[0]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[10],E,E,26,[[[U]],[R[0]]]],[11,R[11],E,E,26,[[],[R[0]]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[12],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[R[29]]]],[11,R[11],E,E,26,[[],[R[0]]]],[11,"into",R[408],E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[10],E,E,27,[[[U]],[R[0]]]],[11,R[11],E,E,27,[[],[R[0]]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[12],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[R[29]]]],[11,R[11],E,E,27,[[],[R[0]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[10],E,E,28,[[[U]],[R[0]]]],[11,R[11],E,E,28,[[],[R[0]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[12],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[R[29]]]],[11,R[11],E,E,28,[[],[R[0]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[10],E,E,29,[[[U]],[R[0]]]],[11,R[11],E,E,29,[[],[R[0]]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[12],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[R[29]]]],[11,R[11],E,E,29,[[],[R[0]]]],[11,"into",R[290],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[10],E,E,30,[[[U]],[R[0]]]],[11,R[11],E,E,30,[[],[R[0]]]],[11,R[28],E,E,30,[[["self"]],[T]]],[11,R[12],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[R[29]]]],[11,R[11],E,E,30,[[],[R[0]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[10],E,E,31,[[[U]],[R[0]]]],[11,R[11],E,E,31,[[],[R[0]]]],[11,R[28],E,E,31,[[["self"]],[T]]],[11,R[12],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[R[29]]]],[11,R[11],E,E,31,[[],[R[0]]]],[11,"into",R[409],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[10],E,E,32,[[[U]],[R[0]]]],[11,R[11],E,E,32,[[],[R[0]]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[12],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[R[29]]]],[11,R[11],E,E,32,[[],[R[0]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[10],E,E,33,[[[U]],[R[0]]]],[11,R[11],E,E,33,[[],[R[0]]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[12],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[R[29]]]],[11,R[11],E,E,33,[[],[R[0]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[10],E,E,34,[[[U]],[R[0]]]],[11,R[11],E,E,34,[[],[R[0]]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[12],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[R[29]]]],[11,R[11],E,E,34,[[],[R[0]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[10],E,E,35,[[[U]],[R[0]]]],[11,R[11],E,E,35,[[],[R[0]]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[12],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[R[29]]]],[11,R[11],E,E,35,[[],[R[0]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[10],E,E,36,[[[U]],[R[0]]]],[11,R[11],E,E,36,[[],[R[0]]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[12],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[R[29]]]],[11,R[11],E,E,36,[[],[R[0]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[10],E,E,37,[[[U]],[R[0]]]],[11,R[11],E,E,37,[[],[R[0]]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[12],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[R[29]]]],[11,"fmt",E,E,37,[[[R[14]],["self"]],[["error"],[R[0],["error"]]]]],[11,R[11],E,E,37,[[],[R[0]]]],[11,"into",R[410],E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[10],E,E,38,[[[U]],[R[0]]]],[11,R[11],E,E,38,[[],[R[0]]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[12],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[R[29]]]],[11,R[11],E,E,38,[[],[R[0]]]],[11,"into",R[296],E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[35],E,E,39,[[["self"]],[T]]],[11,R[36],E,E,39,[[["self"],[T]]]],[11,R[10],E,E,39,[[[U]],[R[0]]]],[11,R[11],E,E,39,[[],[R[0]]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[12],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[R[29]]]],[11,R[415],E,E,39,[[["k"],["self"]],["bool"]]],[11,R[11],E,E,39,[[],[R[0]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[35],E,E,40,[[["self"]],[T]]],[11,R[36],E,E,40,[[["self"],[T]]]],[11,R[10],E,E,40,[[[U]],[R[0]]]],[11,R[11],E,E,40,[[],[R[0]]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[12],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[R[29]]]],[11,R[11],E,E,40,[[],[R[0]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[10],E,E,44,[[[U]],[R[0]]]],[11,R[11],E,E,44,[[],[R[0]]]],[11,R[28],E,E,44,[[["self"]],[T]]],[11,R[12],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[R[29]]]],[11,R[11],E,E,44,[[],[R[0]]]],[11,"into",R[411],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[10],E,E,41,[[[U]],[R[0]]]],[11,R[11],E,E,41,[[],[R[0]]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[12],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[R[29]]]],[11,R[11],E,E,41,[[],[R[0]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[10],E,E,42,[[[U]],[R[0]]]],[11,R[11],E,E,42,[[],[R[0]]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[12],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[R[29]]]],[11,R[11],E,E,42,[[],[R[0]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[10],E,E,43,[[[U]],[R[0]]]],[11,R[11],E,E,43,[[],[R[0]]]],[11,R[28],E,E,43,[[["self"]],[T]]],[11,R[12],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[R[29]]]],[11,R[11],E,E,43,[[],[R[0]]]],[11,"into",R[412],E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[10],E,E,45,[[[U]],[R[0]]]],[11,R[11],E,E,45,[[],[R[0]]]],[11,R[28],E,E,45,[[["self"]],[T]]],[11,R[12],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[R[29]]]],[11,R[11],E,E,45,[[],[R[0]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[10],E,E,46,[[[U]],[R[0]]]],[11,R[11],E,E,46,[[],[R[0]]]],[11,R[28],E,E,46,[[["self"]],[T]]],[11,R[12],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[R[29]]]],[11,R[11],E,E,46,[[],[R[0]]]],[11,"into",R[306],E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[10],E,E,47,[[[U]],[R[0]]]],[11,R[11],E,E,47,[[],[R[0]]]],[11,R[28],E,E,47,[[["self"]],[T]]],[11,R[12],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[R[29]]]],[11,R[11],E,E,47,[[],[R[0]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[10],E,E,48,[[[U]],[R[0]]]],[11,R[11],E,E,48,[[],[R[0]]]],[11,R[28],E,E,48,[[["self"]],[T]]],[11,R[12],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[R[29]]]],[11,R[11],E,E,48,[[],[R[0]]]],[11,"into",R[413],E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[10],E,E,49,[[[U]],[R[0]]]],[11,R[11],E,E,49,[[],[R[0]]]],[11,R[28],E,E,49,[[["self"]],[T]]],[11,R[12],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[R[29]]]],[11,R[11],E,E,49,[[],[R[0]]]],[11,"into",R[414],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[10],E,E,50,[[[U]],[R[0]]]],[11,R[11],E,E,50,[[],[R[0]]]],[11,R[28],E,E,50,[[["self"]],[T]]],[11,R[12],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[R[29]]]],[11,R[11],E,E,50,[[],[R[0]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[35],E,E,51,[[["self"]],[T]]],[11,R[36],E,E,51,[[["self"],[T]]]],[11,R[27],E,E,51,[[["self"]],[R[38]]]],[11,R[10],E,E,51,[[[U]],[R[0]]]],[11,R[11],E,E,51,[[],[R[0]]]],[11,R[28],E,E,51,[[["self"]],[T]]],[11,R[12],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[R[29]]]],[11,R[415],E,E,51,[[["k"],["self"]],["bool"]]],[11,R[11],E,E,51,[[],[R[0]]]],[11,"into",R[318],E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[10],E,E,52,[[[U]],[R[0]]]],[11,R[11],E,E,52,[[],[R[0]]]],[11,R[28],E,E,52,[[["self"]],[T]]],[11,R[12],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[R[29]]]],[11,R[10],E,E,52,[[["str"]],[R[0]]]],[11,R[11],E,E,52,[[],[R[0]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[10],E,E,53,[[[U]],[R[0]]]],[11,R[11],E,E,53,[[],[R[0]]]],[11,R[28],E,E,53,[[["self"]],[T]]],[11,R[12],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[R[29]]]],[11,R[11],E,E,53,[[],[R[0]]]],[11,"into",R[416],E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[10],E,E,54,[[[U]],[R[0]]]],[11,R[11],E,E,54,[[],[R[0]]]],[11,R[28],E,E,54,[[["self"]],[T]]],[11,R[12],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[R[29]]]],[11,R[11],E,E,54,[[],[R[0]]]],[11,"into",R[417],E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[10],E,E,55,[[[U]],[R[0]]]],[11,R[11],E,E,55,[[],[R[0]]]],[11,R[28],E,E,55,[[["self"]],[T]]],[11,R[12],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[R[29]]]],[11,R[11],E,E,55,[[],[R[0]]]],[11,"into",R[418],E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[10],E,E,57,[[[U]],[R[0]]]],[11,R[11],E,E,57,[[],[R[0]]]],[11,R[28],E,E,57,[[["self"]],[T]]],[11,R[12],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[R[29]]]],[11,R[11],E,E,57,[[],[R[0]]]],[11,"into",R[335],E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[27],E,E,58,[[["self"]],[R[38]]]],[11,R[10],E,E,58,[[[U]],[R[0]]]],[11,R[11],E,E,58,[[],[R[0]]]],[11,R[28],E,E,58,[[["self"]],[T]]],[11,R[12],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[R[29]]]],[11,R[11],E,E,58,[[],[R[0]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[35],E,E,59,[[["self"]],[T]]],[11,R[36],E,E,59,[[["self"],[T]]]],[11,R[27],E,E,59,[[["self"]],[R[38]]]],[11,R[10],E,E,59,[[[U]],[R[0]]]],[11,R[11],E,E,59,[[],[R[0]]]],[11,R[28],E,E,59,[[["self"]],[T]]],[11,R[12],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[R[29]]]],[11,R[11],E,E,59,[[],[R[0]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[27],E,E,60,[[["self"]],[R[38]]]],[11,R[10],E,E,60,[[[U]],[R[0]]]],[11,R[11],E,E,60,[[],[R[0]]]],[11,R[28],E,E,60,[[["self"]],[T]]],[11,R[12],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[R[29]]]],[11,R[11],E,E,60,[[],[R[0]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[10],E,E,61,[[[U]],[R[0]]]],[11,R[11],E,E,61,[[],[R[0]]]],[11,R[28],E,E,61,[[["self"]],[T]]],[11,R[12],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[R[29]]]],[11,R[11],E,E,61,[[],[R[0]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[10],E,E,62,[[[U]],[R[0]]]],[11,R[11],E,E,62,[[],[R[0]]]],[11,R[28],E,E,62,[[["self"]],[T]]],[11,R[12],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[R[29]]]],[11,R[11],E,E,62,[[],[R[0]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[27],E,E,63,[[["self"]],[R[38]]]],[11,R[10],E,E,63,[[[U]],[R[0]]]],[11,R[11],E,E,63,[[],[R[0]]]],[11,R[28],E,E,63,[[["self"]],[T]]],[11,R[12],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[R[29]]]],[11,R[11],E,E,63,[[],[R[0]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[35],E,E,64,[[["self"]],[T]]],[11,R[36],E,E,64,[[["self"],[T]]]],[11,R[10],E,E,64,[[[U]],[R[0]]]],[11,R[11],E,E,64,[[],[R[0]]]],[11,R[28],E,E,64,[[["self"]],[T]]],[11,R[12],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[R[29]]]],[11,R[415],E,E,64,[[["k"],["self"]],["bool"]]],[11,R[11],E,E,64,[[],[R[0]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[10],E,E,65,[[[U]],[R[0]]]],[11,R[11],E,E,65,[[],[R[0]]]],[11,R[28],E,E,65,[[["self"]],[T]]],[11,R[12],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[R[29]]]],[11,R[11],E,E,65,[[],[R[0]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[27],E,E,66,[[["self"]],[R[38]]]],[11,R[10],E,E,66,[[[U]],[R[0]]]],[11,R[11],E,E,66,[[],[R[0]]]],[11,R[28],E,E,66,[[["self"]],[T]]],[11,R[12],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[R[29]]]],[11,R[11],E,E,66,[[],[R[0]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[27],E,E,67,[[["self"]],[R[38]]]],[11,R[10],E,E,67,[[[U]],[R[0]]]],[11,R[11],E,E,67,[[],[R[0]]]],[11,R[28],E,E,67,[[["self"]],[T]]],[11,R[12],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[R[29]]]],[11,R[11],E,E,67,[[],[R[0]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[10],E,E,68,[[[U]],[R[0]]]],[11,R[11],E,E,68,[[],[R[0]]]],[11,R[28],E,E,68,[[["self"]],[T]]],[11,R[12],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[R[29]]]],[11,R[11],E,E,68,[[],[R[0]]]],[11,"into",R[419],E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[10],E,E,69,[[[U]],[R[0]]]],[11,R[11],E,E,69,[[],[R[0]]]],[11,R[28],E,E,69,[[["self"]],[T]]],[11,R[12],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[R[29]]]],[11,R[11],E,E,69,[[],[R[0]]]],[11,"into",R[420],E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[10],E,E,70,[[[U]],[R[0]]]],[11,R[11],E,E,70,[[],[R[0]]]],[11,R[28],E,E,70,[[["self"]],[T]]],[11,R[12],E,E,70,[[["self"]],[T]]],[11,R[13],E,E,70,[[["self"]],[R[29]]]],[11,R[11],E,E,70,[[],[R[0]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[10],E,E,71,[[[U]],[R[0]]]],[11,R[11],E,E,71,[[],[R[0]]]],[11,R[28],E,E,71,[[["self"]],[T]]],[11,R[12],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[R[29]]]],[11,R[11],E,E,71,[[],[R[0]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[10],E,E,72,[[[U]],[R[0]]]],[11,R[11],E,E,72,[[],[R[0]]]],[11,R[28],E,E,72,[[["self"]],[T]]],[11,R[12],E,E,72,[[["self"]],[T]]],[11,R[13],E,E,72,[[["self"]],[R[29]]]],[11,R[11],E,E,72,[[],[R[0]]]],[11,"into",R[421],E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[10],E,E,73,[[[U]],[R[0]]]],[11,R[11],E,E,73,[[],[R[0]]]],[11,R[28],E,E,73,[[["self"]],[T]]],[11,R[12],E,E,73,[[["self"]],[T]]],[11,R[13],E,E,73,[[["self"]],[R[29]]]],[11,R[11],E,E,73,[[],[R[0]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[10],E,E,74,[[[U]],[R[0]]]],[11,R[11],E,E,74,[[],[R[0]]]],[11,R[28],E,E,74,[[["self"]],[T]]],[11,R[12],E,E,74,[[["self"]],[T]]],[11,R[13],E,E,74,[[["self"]],[R[29]]]],[11,R[11],E,E,74,[[],[R[0]]]],[11,"into",R[422],E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[10],E,E,75,[[[U]],[R[0]]]],[11,R[11],E,E,75,[[],[R[0]]]],[11,R[28],E,E,75,[[["self"]],[T]]],[11,R[12],E,E,75,[[["self"]],[T]]],[11,R[13],E,E,75,[[["self"]],[R[29]]]],[11,R[11],E,E,75,[[],[R[0]]]],[11,"into",R[375],E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[10],E,E,76,[[[U]],[R[0]]]],[11,R[11],E,E,76,[[],[R[0]]]],[11,R[28],E,E,76,[[["self"]],[T]]],[11,R[12],E,E,76,[[["self"]],[T]]],[11,R[13],E,E,76,[[["self"]],[R[29]]]],[11,R[11],E,E,76,[[],[R[0]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[10],E,E,77,[[[U]],[R[0]]]],[11,R[11],E,E,77,[[],[R[0]]]],[11,R[28],E,E,77,[[["self"]],[T]]],[11,R[12],E,E,77,[[["self"]],[T]]],[11,R[13],E,E,77,[[["self"]],[R[29]]]],[11,R[11],E,E,77,[[],[R[0]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[35],E,E,78,[[["self"]],[T]]],[11,R[36],E,E,78,[[["self"],[T]]]],[11,R[10],E,E,78,[[[U]],[R[0]]]],[11,R[11],E,E,78,[[],[R[0]]]],[11,R[28],E,E,78,[[["self"]],[T]]],[11,R[12],E,E,78,[[["self"]],[T]]],[11,R[13],E,E,78,[[["self"]],[R[29]]]],[11,R[11],E,E,78,[[],[R[0]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[35],E,E,79,[[["self"]],[T]]],[11,R[36],E,E,79,[[["self"],[T]]]],[11,R[10],E,E,79,[[[U]],[R[0]]]],[11,R[11],E,E,79,[[],[R[0]]]],[11,R[28],E,E,79,[[["self"]],[T]]],[11,R[12],E,E,79,[[["self"]],[T]]],[11,R[13],E,E,79,[[["self"]],[R[29]]]],[11,R[11],E,E,79,[[],[R[0]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[35],E,E,80,[[["self"]],[T]]],[11,R[36],E,E,80,[[["self"],[T]]]],[11,R[10],E,E,80,[[[U]],[R[0]]]],[11,R[11],E,E,80,[[],[R[0]]]],[11,R[28],E,E,80,[[["self"]],[T]]],[11,R[12],E,E,80,[[["self"]],[T]]],[11,R[13],E,E,80,[[["self"]],[R[29]]]],[11,R[11],E,E,80,[[],[R[0]]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[10],E,E,81,[[[U]],[R[0]]]],[11,R[11],E,E,81,[[],[R[0]]]],[11,R[28],E,E,81,[[["self"]],[T]]],[11,R[12],E,E,81,[[["self"]],[T]]],[11,R[13],E,E,81,[[["self"]],[R[29]]]],[11,R[11],E,E,81,[[],[R[0]]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[10],E,E,82,[[[U]],[R[0]]]],[11,R[11],E,E,82,[[],[R[0]]]],[11,R[28],E,E,82,[[["self"]],[T]]],[11,R[12],E,E,82,[[["self"]],[T]]],[11,R[13],E,E,82,[[["self"]],[R[29]]]],[11,R[11],E,E,82,[[],[R[0]]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[10],E,E,83,[[[U]],[R[0]]]],[11,R[11],E,E,83,[[],[R[0]]]],[11,R[28],E,E,83,[[["self"]],[T]]],[11,R[12],E,E,83,[[["self"]],[T]]],[11,R[13],E,E,83,[[["self"]],[R[29]]]],[11,R[11],E,E,83,[[],[R[0]]]],[11,"into",R[423],E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[10],E,E,84,[[[U]],[R[0]]]],[11,R[11],E,E,84,[[],[R[0]]]],[11,R[28],E,E,84,[[["self"]],[T]]],[11,R[12],E,E,84,[[["self"]],[T]]],[11,R[13],E,E,84,[[["self"]],[R[29]]]],[11,R[11],E,E,84,[[],[R[0]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[10],E,E,85,[[[U]],[R[0]]]],[11,R[11],E,E,85,[[],[R[0]]]],[11,R[28],E,E,85,[[["self"]],[T]]],[11,R[12],E,E,85,[[["self"]],[T]]],[11,R[13],E,E,85,[[["self"]],[R[29]]]],[11,R[11],E,E,85,[[],[R[0]]]],[11,"into",R[424],E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[10],E,E,86,[[[U]],[R[0]]]],[11,R[11],E,E,86,[[],[R[0]]]],[11,R[28],E,E,86,[[["self"]],[T]]],[11,R[12],E,E,86,[[["self"]],[T]]],[11,R[13],E,E,86,[[["self"]],[R[29]]]],[11,R[11],E,E,86,[[],[R[0]]]],[11,"into",R[425],E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[10],E,E,87,[[[U]],[R[0]]]],[11,R[11],E,E,87,[[],[R[0]]]],[11,R[28],E,E,87,[[["self"]],[T]]],[11,R[12],E,E,87,[[["self"]],[T]]],[11,R[13],E,E,87,[[["self"]],[R[29]]]],[11,R[11],E,E,87,[[],[R[0]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[10],E,E,88,[[[U]],[R[0]]]],[11,R[11],E,E,88,[[],[R[0]]]],[11,R[28],E,E,88,[[["self"]],[T]]],[11,R[12],E,E,88,[[["self"]],[T]]],[11,R[13],E,E,88,[[["self"]],[R[29]]]],[11,R[11],E,E,88,[[],[R[0]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[10],E,E,89,[[[U]],[R[0]]]],[11,R[11],E,E,89,[[],[R[0]]]],[11,R[28],E,E,89,[[["self"]],[T]]],[11,R[12],E,E,89,[[["self"]],[T]]],[11,R[13],E,E,89,[[["self"]],[R[29]]]],[11,R[11],E,E,89,[[],[R[0]]]],[11,"into",R[398],E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[10],E,E,91,[[[U]],[R[0]]]],[11,R[11],E,E,91,[[],[R[0]]]],[11,R[28],E,E,91,[[["self"]],[T]]],[11,R[12],E,E,91,[[["self"]],[T]]],[11,R[13],E,E,91,[[["self"]],[R[29]]]],[11,R[11],E,E,91,[[],[R[0]]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[10],E,E,92,[[[U]],[R[0]]]],[11,R[11],E,E,92,[[],[R[0]]]],[11,R[28],E,E,92,[[["self"]],[T]]],[11,R[12],E,E,92,[[["self"]],[T]]],[11,R[13],E,E,92,[[["self"]],[R[29]]]],[11,R[11],E,E,92,[[],[R[0]]]],[11,"into",R[426],E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[10],E,E,93,[[[U]],[R[0]]]],[11,R[11],E,E,93,[[],[R[0]]]],[11,R[28],E,E,93,[[["self"]],[T]]],[11,R[12],E,E,93,[[["self"]],[T]]],[11,R[13],E,E,93,[[["self"]],[R[29]]]],[11,R[11],E,E,93,[[],[R[0]]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[10],E,E,94,[[[U]],[R[0]]]],[11,R[11],E,E,94,[[],[R[0]]]],[11,R[28],E,E,94,[[["self"]],[T]]],[11,R[12],E,E,94,[[["self"]],[T]]],[11,R[13],E,E,94,[[["self"]],[R[29]]]],[11,R[11],E,E,94,[[],[R[0]]]],[11,"into",R[400],E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[35],E,E,95,[[["self"]],[T]]],[11,R[36],E,E,95,[[["self"],[T]]]],[11,R[27],E,E,95,[[["self"]],[R[38]]]],[11,R[10],E,E,95,[[[U]],[R[0]]]],[11,R[11],E,E,95,[[],[R[0]]]],[11,R[28],E,E,95,[[["self"]],[T]]],[11,R[12],E,E,95,[[["self"]],[T]]],[11,R[13],E,E,95,[[["self"]],[R[29]]]],[11,R[415],E,E,95,[[["k"],["self"]],["bool"]]],[11,R[10],E,E,95,[[["str"]],[R[0]]]],[11,R[11],E,E,95,[[],[R[0]]]],[11,"into",R[427],E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[10],E,E,96,[[[U]],[R[0]]]],[11,R[11],E,E,96,[[],[R[0]]]],[11,R[28],E,E,96,[[["self"]],[T]]],[11,R[12],E,E,96,[[["self"]],[T]]],[11,R[13],E,E,96,[[["self"]],[R[29]]]],[11,"fmt",E,E,96,[[[R[14]],["self"]],[["error"],[R[0],["error"]]]]],[11,R[11],E,E,96,[[],[R[0]]]],[11,R[319],R[416],E,54,[[["self"]],["path"]]],[11,R[428],E,E,54,[[[R[320]],["self"]],[R[38]]]],[11,R[319],R[417],E,55,[[["self"]],["path"]]],[11,R[428],E,E,55,[[[R[320]],["self"]],[R[38]]]],[11,R[319],R[318],E,52,[[["self"]],["path"]]],[11,R[428],E,E,52,[[[R[320]],["self"]],[R[38]]]],[11,"fetch",R[335],E,58,[[[R[305]]],[R[263]]]],[11,R[429],E,E,58,[[[R[305]]],[R[263]]]],[11,"pin",E,E,58,[[[R[305]]],[R[263]]]],[11,"fetch",E,E,60,[[[R[305]]],[R[263]]]],[11,R[429],E,E,60,[[[R[305]]],[R[263]]]],[11,"pin",E,E,60,[[[R[305]]],[R[263]]]],[11,"fetch",E,E,63,[[[R[305]]],[R[263]]]],[11,R[429],E,E,63,[[[R[305]]],[R[263]]]],[11,"pin",E,E,63,[[[R[305]]],[R[263]]]],[11,"fetch",E,E,66,[[[R[305]]],[R[263]]]],[11,R[429],E,E,66,[[[R[305]]],[R[263]]]],[11,"pin",E,E,66,[[[R[305]]],[R[263]]]],[11,"from",R[290],E,31,[[["rawbinmanifest"]],["self"]]],[11,"from",R[409],E,35,[[[R[292]],["rc",[R[292]]]],["self"]]],[11,"from",R[420],E,70,[[[R[334]]],["nodeindex"]]],[11,"from",R[422],E,75,[[[R[369]]],[R[368]]]],[11,"from",R[335],E,65,[[[R[433]]],[R[344]]]],[11,"from",R[375],E,81,[[[R[432]]],[R[438]]]],[11,"from",E,E,82,[[[R[304]]],[R[439]]]],[11,"from",R[335],E,62,[[[R[431]]],[R[430]]]],[11,"from",R[375],E,83,[[[R[430]]],[R[431]]]],[11,"from",R[424],E,86,[[["rawyarnindex"]],["yarnindex"]]],[11,"clone",R[406],E,23,[[["self"]],["packagecollection"]]],[11,"clone",R[296],E,39,[[["self"]],[R[292]]]],[11,"clone",E,E,40,[[["self"]],["image"]]],[11,"clone",R[414],E,51,[[["self"]],[R[261]]]],[11,"clone",R[335],E,59,[[["self"]],[R[301]]]],[11,"clone",E,E,64,[[["self"]],[R[432]]]],[11,"clone",R[375],E,78,[[["self"]],["rawpackagedisttags"]]],[11,"clone",E,E,79,[[["self"]],["rawdistinfo"]]],[11,"clone",E,E,80,[[["self"]],[R[433]]]],[11,"clone",R[400],E,95,[[["self"]],[R[363]]]],[11,"default",E,E,95,[[],["self"]]],[11,R[434],R[296],E,39,[[["self"]]]],[11,R[434],R[414],E,51,[[["self"]]]],[11,R[434],R[335],E,64,[[["self"]]]],[11,R[434],R[400],E,95,[[["self"]]]],[11,"cmp",R[296],E,39,[[["self"],[R[292]]],[R[435]]]],[11,"cmp",R[414],E,51,[[[R[261]],["self"]],[R[435]]]],[11,"cmp",R[335],E,64,[[["self"],[R[432]]],[R[435]]]],[11,"cmp",R[400],E,95,[[[R[363]],["self"]],[R[435]]]],[11,"eq",R[39],E,0,[[[R[436]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[436]],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[308]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[308]]],["bool"]]],[11,"eq",R[270],E,18,[[[R[264]],["self"]],["bool"]]],[11,"ne",E,E,18,[[[R[264]],["self"]],["bool"]]],[11,"eq",E,E,19,[[[R[265]],["self"]],["bool"]]],[11,"ne",E,E,19,[[[R[265]],["self"]],["bool"]]],[11,"eq",R[268],E,10,[[["self"],[R[311]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[311]]],["bool"]]],[11,"eq",R[409],E,32,[[["self"],["binmap"]],["bool"]]],[11,"ne",E,E,32,[[["self"],["binmap"]],["bool"]]],[11,"eq",E,E,36,[[["self"],["engines"]],["bool"]]],[11,"ne",E,E,36,[[["self"],["engines"]],["bool"]]],[11,"eq",R[296],E,39,[[["self"],[R[292]]],["bool"]]],[11,"ne",E,E,39,[[["self"],[R[292]]],["bool"]]],[11,"eq",R[414],E,51,[[[R[261]],["self"]],["bool"]]],[11,"eq",R[418],E,57,[[[R[321]],["self"]],["bool"]]],[11,"eq",R[335],E,64,[[["self"],[R[432]]],["bool"]]],[11,"ne",E,E,64,[[["self"],[R[432]]],["bool"]]],[11,"eq",E,E,67,[[["self"],["spec"]],["bool"]]],[11,"ne",E,E,67,[[["self"],["spec"]],["bool"]]],[11,"eq",R[426],E,93,[[[R[301]],["self"]],["bool"]]],[11,"ne",E,E,93,[[[R[301]],["self"]],["bool"]]],[11,"eq",E,E,94,[[["self"],[R[291]]],["bool"]]],[11,"ne",E,E,94,[[["self"],[R[291]]],["bool"]]],[11,"eq",R[400],E,95,[[[R[363]],["self"]],["bool"]]],[11,"ne",E,E,95,[[[R[363]],["self"]],["bool"]]],[11,R[437],R[296],E,39,[[["self"],[R[292]]],[[R[7],[R[435]]],[R[435]]]]],[11,"lt",E,E,39,[[["self"],[R[292]]],["bool"]]],[11,"le",E,E,39,[[["self"],[R[292]]],["bool"]]],[11,"gt",E,E,39,[[["self"],[R[292]]],["bool"]]],[11,"ge",E,E,39,[[["self"],[R[292]]],["bool"]]],[11,R[437],R[414],E,51,[[[R[261]],["self"]],[[R[7],[R[435]]],[R[435]]]]],[11,R[437],R[335],E,64,[[["self"],[R[432]]],[[R[7],[R[435]]],[R[435]]]]],[11,"lt",E,E,64,[[["self"],[R[432]]],["bool"]]],[11,"le",E,E,64,[[["self"],[R[432]]],["bool"]]],[11,"gt",E,E,64,[[["self"],[R[432]]],["bool"]]],[11,"ge",E,E,64,[[["self"],[R[432]]],["bool"]]],[11,R[437],R[400],E,95,[[[R[363]],["self"]],[[R[7],[R[435]]],[R[435]]]]],[11,"lt",E,E,95,[[[R[363]],["self"]],["bool"]]],[11,"le",E,E,95,[[[R[363]],["self"]],["bool"]]],[11,"gt",E,E,95,[[[R[363]],["self"]],["bool"]]],[11,"ge",E,E,95,[[[R[363]],["self"]],["bool"]]],[11,"fmt",R[39],E,0,[[[R[14]],["self"]],[R[0]]]],[11,"fmt",E,E,1,[[[R[14]],["self"]],[R[0]]]],[11,"fmt",R[414],E,51,[[["self"],[R[14]]],[["error"],[R[0],["error"]]]]],[11,"fmt",R[335],E,59,[[[R[14]],["self"]],[R[0]]]],[11,"fmt",E,E,58,[[[R[14]],["self"]],[R[0]]]],[11,"fmt",E,E,60,[[[R[14]],["self"]],[R[0]]]],[11,"fmt",E,E,63,[[[R[14]],["self"]],[R[0]]]],[11,"fmt",E,E,66,[[[R[14]],["self"]],[R[0]]]],[11,"fmt",E,E,67,[[[R[14]],["self"]],[R[0]]]],[11,"fmt",R[400],E,95,[[[R[14]],["self"]],[["error"],[R[0],["error"]]]]],[11,"fmt",R[39],E,0,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[270],E,18,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,19,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[268],E,10,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[409],E,32,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,36,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[296],E,39,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,40,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[306],E,47,[[[R[14]],["self"]],[R[0]]]],[11,"fmt",R[420],E,71,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,72,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[335],E,59,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,58,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,60,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,64,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[375],E,76,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,77,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,78,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,79,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,80,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,81,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,82,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,83,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[335],E,65,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,63,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,66,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,67,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,68,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[426],E,93,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,94,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",R[400],E,95,[[["self"],[R[14]]],[R[0]]]],[11,R[10],R[268],E,10,[[["rawpublishhook"]],[[R[263],[R[311]]],[R[311]]]]],[11,R[10],E,E,9,[[["raweventhooks"]],[[R[273]],[R[263],[R[273]]]]]],[11,R[10],R[335],E,64,[[[R[438]]],[[R[432]],[R[263],[R[432]]]]]],[11,R[10],E,E,61,[[[R[439]]],[[R[304]],[R[263],[R[304]]]]]],[11,R[535],R[318],E,52,[[["str"]],[[R[0],[R[4]]],[R[4]]]]],[11,R[535],R[400],E,95,[[["str"]],[R[0]]]],[11,"deref",R[270],E,16,[[["self"]],[R[38]]]],[11,"deref",E,E,17,[[["self"]],[R[38]]]],[11,"deref",R[282],E,25,[[["self"]],[R[440]]]],[11,"deref",E,E,26,[[["self"]],[R[440]]]],[11,"deref",R[409],E,32,[[["self"]],[R[441]]]],[11,"deref",R[423],E,84,[[["self"]],["regex"]]],[11,"deref",E,E,85,[[["self"]],["regex"]]],[11,"deref_mut",R[409],E,32,[[["self"]],[R[441]]]],[11,"name",R[39],E,1,[[["self"]],[["str"],[R[7],["str"]]]]],[11,"cause",E,E,1,[[["self"]],[[R[7],["fail"]],["fail"]]]],[11,R[5],E,E,1,[[["self"]],[[R[7],[R[5]]],[R[5]]]]],[11,R[2],E,E,1,[[["self"]],[R[9]]]],[11,R[402],R[259],E,2,[[["self"],["__s"]],[R[0]]]],[11,R[402],E,E,3,[[["self"],["__s"]],[R[0]]]],[11,R[402],E,E,5,[[["self"],["__s"]],[R[0]]]],[11,R[402],R[404],E,11,[[["self"],["__s"]],[R[0]]]],[11,R[402],E,E,12,[[["self"],["__s"]],[R[0]]]],[11,R[402],E,E,13,[[["self"],["__s"]],[R[0]]]],[11,R[402],E,E,14,[[["self"],["__s"]],[R[0]]]],[11,R[402],E,E,15,[[["self"],["__s"]],[R[0]]]],[11,R[402],R[409],E,35,[[["self"],["__s"]],[R[0]]]],[11,R[402],E,E,36,[[["self"],["__s"]],[R[0]]]],[11,R[402],R[375],E,81,[[["self"],["__s"]],[R[0]]]],[11,R[402],E,E,82,[[["self"],["__s"]],[R[0]]]],[11,R[402],E,E,83,[[["self"],["__s"]],[R[0]]]],[11,R[402],R[426],E,93,[[["self"],["__s"]],[R[0]]]],[11,R[402],E,E,94,[[["self"],["__s"]],[R[0]]]],[11,R[442],R[409],E,37,[[[R[14]],["self"]],[R[0]]]],[11,"visit_map",E,E,37,[[["m"]],[R[0]]]],[11,R[443],E,E,37,[[["str"]],[R[0]]]],[11,R[442],R[427],E,96,[[[R[14]],["self"]],[R[0]]]],[11,R[443],E,E,96,[[["str"]],[R[0]]]],[11,R[401],R[404],E,11,[[["__d"]],[R[0]]]],[11,R[401],E,E,12,[[["__d"]],[R[0]]]],[11,R[401],E,E,13,[[["__d"]],[R[0]]]],[11,R[401],E,E,14,[[["__d"]],[R[0]]]],[11,R[401],E,E,15,[[["__d"]],[R[0]]]],[11,R[401],R[409],E,33,[[["__d"]],[R[0]]]],[11,R[401],E,E,34,[[["__d"]],[R[0]]]],[11,R[401],E,E,35,[[["__d"]],[R[0]]]],[11,R[401],E,E,36,[[["__d"]],[R[0]]]],[11,R[401],E,E,32,[[["d"]],[R[0]]]],[11,R[401],R[419],E,69,[[["__d"]],[R[0]]]],[11,R[401],R[421],E,73,[[["__d"]],[R[0]]]],[11,R[401],E,E,74,[[["__d"]],[R[0]]]],[11,R[401],R[375],E,76,[[["__d"]],[R[0]]]],[11,R[401],E,E,77,[[["__d"]],[R[0]]]],[11,R[401],E,E,78,[[["__d"]],[R[0]]]],[11,R[401],E,E,79,[[["__d"]],[R[0]]]],[11,R[401],E,E,80,[[["__d"]],[R[0]]]],[11,R[401],E,E,81,[[["__d"]],[R[0]]]],[11,R[401],E,E,82,[[["__d"]],[R[0]]]],[11,R[401],E,E,83,[[["__d"]],[R[0]]]],[11,R[401],R[425],E,87,[[["__d"]],[R[0]]]],[11,R[401],E,E,88,[[["__d"]],[R[0]]]],[11,R[401],E,E,89,[[["__d"]],[R[0]]]],[11,R[401],R[426],E,93,[[["__d"]],[R[0]]]],[11,R[401],E,E,94,[[["__d"]],[R[0]]]],[11,"enabled",R[408],E,27,[[["metadata"],["self"]],["bool"]]],[11,"log",E,E,27,[[["record"],["self"]]]],[11,"flush",E,E,27,[[["self"]]]],[11,R[444],R[270],E,16,[[["self"]]]],[11,R[444],E,E,17,[[["self"]]]],[11,R[444],R[282],E,25,[[["self"]]]],[11,R[444],E,E,26,[[["self"]]]],[11,R[444],R[423],E,84,[[["self"]]]],[11,R[444],E,E,85,[[["self"]]]]],"p":[[4,R[46]],[4,R[48]],[3,"Event"],[3,"ErrorEnv"],[3,"EventLog"],[4,R[445]],[3,R[446]],[3,R[447]],[3,R[448]],[3,R[449]],[4,"Publish"],[3,R[450]],[3,R[451]],[3,R[452]],[3,R[453]],[3,R[454]],[3,R[455]],[3,R[272]],[4,R[456]],[4,R[457]],[3,R[458]],[3,R[459]],[3,R[460]],[3,R[461]],[3,R[462]],[3,R[281]],[3,R[283]],[3,"Logger"],[4,R[463]],[4,R[464]],[3,R[329]],[3,R[465]],[3,"BinMap"],[3,R[329]],[3,R[466]],[3,R[467]],[3,"Engines"],[3,R[468]],[3,"Monitor"],[3,R[469]],[3,"Image"],[3,R[470]],[3,R[471]],[4,"Source"],[3,"System"],[3,R[472]],[3,"Project"],[3,R[473]],[4,R[474]],[3,R[475]],[3,"Session"],[4,R[476]],[3,R[477]],[4,R[478]],[3,"Bash"],[3,"Fish"],[8,"Shell"],[4,R[479]],[3,"Node"],[3,R[324]],[3,"Npm"],[3,R[352]],[3,R[359]],[3,R[534]],[3,R[347]],[3,R[337]],[3,"Yarn"],[4,"Spec"],[4,"Resolved"],[3,R[329]],[3,R[480]],[3,R[481]],[3,R[482]],[3,R[483]],[3,R[484]],[3,R[485]],[3,R[486]],[3,R[487]],[3,R[488]],[3,R[489]],[3,R[490]],[3,R[491]],[3,R[492]],[3,R[493]],[3,R[378]],[3,R[379]],[3,R[494]],[3,R[495]],[3,R[496]],[3,R[497]],[8,"Tool"],[3,R[498]],[3,R[499]],[3,R[324]],[3,"Platform"],[4,R[500]],[3,R[501]]]};
searchIndex["volta_fail"]={"doc":"This crate provides a protocol for Volta's error handling,…","i":[[3,R[15],"volta_fail","The `VoltaError` type, which can contain any Volta failure.",N,N],[12,"error",E,"The underlying error.",0,N],[12,R[2],E,"The result of `error.exit_code()`.",0,N],[4,R[16],E,"Exit codes supported by the VoltaFail trait.",N,N],[13,"Success",E,"No error occurred.",1,N],[13,"UnknownError",E,"An unknown error occurred.",1,N],[13,"InvalidArguments",E,"An invalid combination of command-line arguments was…",1,N],[13,"NoVersionMatch",E,"No match could be found for the requested version string.",1,N],[13,"NetworkError",E,"A network error occurred.",1,N],[13,"EnvironmentError",E,"A required environment variable was unset or invalid.",1,N],[13,"FileSystemError",E,"A file could not be read or written.",1,N],[13,"ConfigurationError",E,"Package configuration is missing or incorrect.",1,N],[13,"NotYetImplemented",E,"The command or feature is not yet implemented.",1,N],[13,"ExecutionFailure",E,"The requested executable could not be run.",1,N],[13,"ExecutableNotFound",E,"The requested executable is not available.",1,N],[6,"Fallible",E,"A convenient shorthand for `Result` types that produce…",N,N],[17,"_IMPL_SERIALIZE_FOR_ExitCode",E,E,N,N],[8,R[17],E,"The failure trait for all Volta errors.",N,N],[10,R[2],E,R[8],2,[[["self"]],[R[9]]]],[8,"FailExt",E,"An extension trait allowing any failure, including…",N,N],[10,R[3],E,E,3,[[["f"]],[R[4]]]],[8,R[18],E,"An extension trait for `Result` values, allowing…",N,N],[10,R[3],E,"Wrap any error-producing result in a higher-layer…",4,[[["f"]],[[R[0],[R[4]]],[R[4]]]]],[11,"exit",E,E,1,[[]]],[11,R[30],E,"Returns a reference to the underlying failure of this error.",0,[[["self"]],["fail"]]],[11,R[5],E,"Gets a reference to the `Backtrace` for this error.",0,[[["self"]],[R[5]]]],[11,"downcast_ref",E,R[6],0,[[["self"]],[[T],[R[7]]]]],[11,"downcast_mut",E,R[6],0,[[["self"]],[[T],[R[7]]]]],[11,R[2],E,R[8],0,[[["self"]],[R[9]]]],[14,"throw",E,"A temporary polyfill for `throw!` until the new `failure`…",N,N],[11,R[3],E,E,0,[[["f"]],[R[4]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[27],E,E,0,[[["self"]],[R[38]]]],[11,R[10],E,E,0,[[[U]],[R[0]]]],[11,R[11],E,E,0,[[],[R[0]]]],[11,R[28],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[R[29]]]],[11,R[30],E,E,0,[[["self"]],["fail"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[["self"],[T]]]],[11,R[10],E,E,1,[[[U]],[R[0]]]],[11,R[11],E,E,1,[[],[R[0]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,0,[[[T]],["self"]]],[11,"clone",E,E,1,[[["self"]],[R[9]]]],[11,"fmt",E,E,0,[[[R[14]],["self"]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[14]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[14]]],[R[0]]]],[11,"cause",E,E,0,[[["self"]],[["fail"],[R[7],["fail"]]]]],[11,R[5],E,E,0,[[["self"]],[[R[5]],[R[7],[R[5]]]]]],[11,R[402],E,E,1,[[["self"],["__s"]],[R[0]]]]],"p":[[3,R[15]],[4,R[16]],[8,R[17]],[8,"FailExt"],[8,R[18]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);